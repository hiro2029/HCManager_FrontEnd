{"version":3,"sources":["components/Home/Home.js","components/Navigation.js","components/Header.js","APILink.js","components/Group/GroupInfo.js","components/Group/Pagination.js","components/Modal.js","components/Overray.js","components/Group/CreateGroupModal.js","components/Group/Body.js","components/Users/Pagination.js","components/Users/UserInfo.js","components/Users/Body.js","components/Questions/QuestionInfo.js","components/Questions/Pagination.js","components/Questions/Questions.js","components/TeachingMaterials/TeachingMaterialInfo.js","components/TeachingMaterials/Pagination.js","components/TeachingMaterials/CreateTeachingMaterialModal.js","components/TeachingMaterials/TeachingMaterials.js","components/GroupDetail/GroupDetail.js","components/TMDetail/TeachingMaterialDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","StyledLink","styled","Link","Navigation","props","docked","width","open","onRequestChange","setOpenNavigation","to","onClick","Header","useState","openNavigation","AppBar","position","onLeftIconButtonTouchTap","color","Typography","variant","APILink","UsersAPI","GroupsAPI","BooksAPI","QuestionsAPI","GroupInfo","User","setUser","useEffect","fetch","data","user_id","then","res","json","Card","name","access_key","created_at","Button","concat","group_id","Pagination","style","marginTop","marginBottom","pageCount","Math","ceil","dataleng","perPage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page_number","setOffset","containerClassName","pageClassName","pageLinkClassName","activeClassName","previousLabel","nextLabel","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","breakLabel","breakClassName","breakLinkClassName","ModalWindow","div","Modal","children","OverrayComponent","Overray","InputUnit","CreateGroupButton","ModalTitle","CreateGroupModal","Users","setUsers","htmlFor","type","id","value","PostData","onChange","e","setPostData","target","map","summary","rows","confirm","CreateGroupFetch","onClose","alert","Body","offset","Groups","setGroups","modalVisible","setModalVisible","CreateGroupPostData","setCreateGroupPostData","getGroups","length","slice","method","headers","body","JSON","stringify","StyledDelete","Delete","StyledEdit","Edit","UserInfo","TableRow","sx","border","TableCell","component","scope","align","mail","role","console","log","TableContainer","Paper","Table","TableHead","TableBody","QuestionInfo","mode","Questions","setQuestions","question_id","TeachingMaterialInfo","user","book_id","CreateTeachingMaterialModal","overlayClass","FormClass","CreateTeachingMaterial","ReactDOM","createPortal","document","getElementById","Books","setBooks","books_id","EditGroupButton","GroupDetail","param","useParams","GroupData","setGroupData","CreatedBy","setCreatedBy","BooksInGroup","setBooksInGroup","isOpenModal","setIsOpenModal","BookPostBody","setBookPostBody","EditGroupPostData","setEditGroupPostData","getBookInGroup","Array","isArray","EditGroupCheck","GroupDataFetch","class","split","item","match","response","catch","error","book","TeachingMaterialDetail","Book","setBook","createdBy","questionInBook","setQuestionInBook","QuestionPostBody","setQuestionPostBody","getQuestionInBook","question","Group","TeachingMaterials","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.dc1af34f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home  = () => {\r\n\r\n    return <div className=\"topHeading\">HelloCManager制作中です</div>\r\n}\r\n\r\nexport default Home;","import styled from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {MenuItem, Drawer} from 'material-ui';\r\n\r\nimport './Navigation.css';\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #000;\r\n  font-size: 16px;\r\n  letter-spacing: 1.4px;\r\n  '&:hover': {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    //   <nav className=\"Navigation\">\r\n    //     <ul className=\"NavigationList\">\r\n    //     <StyledLink to=\"/\">\r\n    //         <li className=\"NavigationUnit\">\r\n    //             <span >TOP</span>\r\n    //         </li>\r\n    //       </StyledLink>\r\n    //       <StyledLink to=\"/group\">\r\n    //         <li className=\"NavigationUnit\">\r\n    //             <span >グループ一覧</span>\r\n    //         </li>\r\n    //       </StyledLink>\r\n    //       <StyledLink to=\"/users\">\r\n    //         <li className=\"NavigationUnit\">\r\n    //             <span >ユーザ一覧</span>\r\n    //         </li>\r\n    //       </StyledLink>\r\n    //       <StyledLink to=\"/questions\">\r\n    //         <li className=\"NavigationUnit\">\r\n    //             <span >問題一覧</span>\r\n    //         </li>\r\n    //       </StyledLink>\r\n    //       <StyledLink to=\"/teachingMaterials\">\r\n    //         <li className=\"NavigationUnit\">\r\n    //             <span >教材一覧</span>\r\n    //         </li>\r\n    //       </StyledLink>\r\n    //     </ul>\r\n    // </nav>\r\n    <Drawer docked={false} width={200} open={props.open} onRequestChange={() => props.setOpenNavigation(false)}>\r\n      <StyledLink to='/' onClick={() => props.setOpenNavigation(false)}>\r\n        <MenuItem>TOP</MenuItem>\r\n      </StyledLink>\r\n\r\n      <StyledLink to='/group' onClick={() => props.setOpenNavigation(false)}>\r\n        <MenuItem>グループ一覧</MenuItem>\r\n      </StyledLink>\r\n\r\n      <StyledLink to='/users' onClick={() => props.setOpenNavigation(false)}>\r\n        <MenuItem>ユーザー覧</MenuItem>\r\n      </StyledLink>\r\n\r\n      <StyledLink to='/questions' onClick={() => props.setOpenNavigation(false)}>\r\n        <MenuItem>問題一覧</MenuItem>\r\n      </StyledLink>\r\n\r\n      <StyledLink to='/teachingMaterials' onClick={() => props.setOpenNavigation(false)}>\r\n        <MenuItem>教材一覧</MenuItem>\r\n      </StyledLink>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import {useState} from \"react\";\r\n\r\nimport \"./Header.css\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {IconButton} from \"material-ui\";\r\nimport Navigation from \"./Navigation\";\r\nconst Header = () => {\r\n    const [openNavigation,setOpenNavigation] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Navigation open={openNavigation} setOpenNavigation={setOpenNavigation}></Navigation>\r\n        <AppBar position=\"static\" className=\"Header\" onLeftIconButtonTouchTap={() => setOpenNavigation(true)}>\r\n        <IconButton \r\n                color=\"inherit\"\r\n                aria-label=\"Menu\"\r\n                onClick={() => setOpenNavigation(true)}>\r\n\t\t        <MenuIcon className=\"MenuIcon\"></MenuIcon>\r\n            </IconButton>\r\n            <Typography className=\"Title\" variant=\"h3\" color=\"inherit\">\r\n                    HelloC Manager\r\n                </Typography>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","//API\r\nconst APILink = 'http://192.168.100.130:4000';\r\n\r\nexport const UsersAPI = APILink + '/api/users';\r\n\r\nexport const GroupsAPI = APILink + '/api/groups';\r\n\r\nexport const BooksAPI = APILink + '/api/books';\r\n\r\nexport const QuestionsAPI = APILink + '/api/questions';\r\n","import {useEffect, useState} from 'react';\r\nimport './GroupInfo.css';\r\nimport styled from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {UsersAPI} from '../../APILink';\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #000;\r\n  font-size: 16px;\r\n  letter-spacing: 1.4px;\r\n  '&:hover': {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst GroupInfo = (props) => {\r\n  const [User, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(UsersAPI + '/' + props.data.user_id) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUser(json);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card className='GroupInfoFrame'>\r\n      <div className='GroupInfoGrid'>\r\n        <div>\r\n          <span className='elementName'>グループ名</span>\r\n          {props.data.name}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>作成者</span>\r\n          {User ? User.name : ''}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>アクセスキー</span>\r\n          {props.data.access_key}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>作成日</span>\r\n          {props.data.created_at}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='GroupInfoLinkGrid'>\r\n        <div className='GroupInfoDeleteButtonFrame'>\r\n          <Button variant='contained' color='secondary' className='GroupInfoDeleteButton'>\r\n            削除する\r\n          </Button>\r\n        </div>\r\n        <div className='GroupInfoDetailButtonFrame'>\r\n          <StyledLink to={'/group/detail/'.concat(props.data.group_id)}>\r\n            <Button variant='contained' color='primary' className='GroupInfoDetailButton'>\r\n              詳細を見る\r\n            </Button>\r\n          </StyledLink>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GroupInfo;\r\n","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import styled from 'styled-components';\r\n\r\nconst ModalWindow = styled.div`\r\n  position: fixed;\r\n  min-width: 500px;\r\n  width: 40%;\r\n\r\n  background-color: #fffeee;\r\n  z-index: 10;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px 50px;\r\n`;\r\n\r\nexport const Modal = (props) => {\r\n  return <ModalWindow>{props.children}</ModalWindow>;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst OverrayComponent = styled.div`\r\n  position: fixed;\r\n  width: 120vw;\r\n  height: 120vh;\r\n  background-color: #00000070;\r\n  z-index: 5;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Overray = (props) => {\r\n  return <OverrayComponent onClick={props.onClick}></OverrayComponent>;\r\n};\r\n","import {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {UsersAPI} from '../../APILink';\r\n\r\nimport {Modal} from '../Modal';\r\nimport {Overray} from '../Overray';\r\n\r\nconst InputUnit = styled.div`\r\n  display: grid;\r\n  grid-template-columns: max-content 1fr;\r\n  grid-column-gap: 30px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst CreateGroupButton = styled(Button)`\r\n  margin-right: 20px !important;\r\n  font-size: 18px !important;\r\n  border: solid 2px #777;\r\n  background-color: #ddd;\r\n  padding: 5px 20px !important;\r\n  box-shadow: 5px 5px 5px #00000040;\r\n  cursor: pointer;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst ModalTitle = styled.div`\r\n  text-align: left;\r\n  font-size: 20px;\r\n  padding: 7px 20px;\r\n  padding-left: 15px;\r\n  margin-bottom: 40px;\r\n  background: #f4f4f4; /*背景色*/\r\n  border-left: solid 8px #ff47ac; /*左線*/\r\n  border-bottom: solid 3px #d7d7d7; /*下線*/\r\n`;\r\n\r\nexport const CreateGroupModal = (props) => {\r\n  const [Users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(UsersAPI) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUsers(json);\r\n      });\r\n  }, []);\r\n\r\n  const CreateGroupCheck = () => {\r\n    if (\r\n      props.PostData.name == '' ||\r\n      props.PostData.summary == '' ||\r\n      props.PostData.user_id == '' ||\r\n      props.PostData.access_key == ''\r\n    ) {\r\n      alert('全ての項目を入力してください。');\r\n      return;\r\n    }\r\n    if (confirm('データを作成してよろしいですか？')) {\r\n      props.CreateGroupFetch();\r\n      props.onClose();\r\n      // console.log(EditGroupPostData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal>\r\n        <ModalTitle className='ModalTitle'>グループ作成</ModalTitle>\r\n        <InputUnit>\r\n          <label htmlFor='groupname'>グループ名</label>\r\n          <input\r\n            type='text'\r\n            id='groupname'\r\n            value={props.PostData.name}\r\n            onChange={(e) => props.setPostData({...props.PostData, name: e.target.value})}\r\n          ></input>\r\n        </InputUnit>\r\n        <InputUnit>\r\n          <label htmlFor='username'>作成者</label>\r\n          <select\r\n            id='username'\r\n            value={props.PostData.user_id}\r\n            onChange={(e) => props.setPostData({...props.PostData, user_id: e.target.value})}\r\n          >\r\n            <option value=''></option>\r\n            {Users.map((data) => (\r\n              <option value={data.user_id} key={data.user_id}>\r\n                {data.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </InputUnit>\r\n        <InputUnit>\r\n          <label htmlFor='accesskey'>アクセスキー</label>\r\n          <input\r\n            type='text'\r\n            id='accesskey'\r\n            value={props.PostData.access_key}\r\n            onChange={(e) => props.setPostData({...props.PostData, access_key: e.target.value})}\r\n          ></input>\r\n        </InputUnit>\r\n        <InputUnit>\r\n          <label htmlFor='summary'>グループ概略</label>\r\n          <textarea\r\n            id='summary'\r\n            value={props.PostData.summary}\r\n            rows='5'\r\n            onChange={(e) => props.setPostData({...props.PostData, summary: e.target.value})}\r\n          ></textarea>\r\n        </InputUnit>\r\n        <CreateGroupButton variant='contained' color='primary' onClick={() => CreateGroupCheck()}>\r\n          作成\r\n        </CreateGroupButton>\r\n      </Modal>\r\n      <Overray onClick={props.onClose}></Overray>\r\n    </div>\r\n  );\r\n};\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport GroupInfo from './GroupInfo';\r\nimport Pagination from './Pagination';\r\n\r\nimport {GroupsAPI} from '../../APILink';\r\n\r\nimport {CreateGroupModal} from './CreateGroupModal';\r\n\r\nimport './Body.css';\r\n\r\nconst Body = () => {\r\n  const [offset, setOffset] = useState(0);\r\n  const [Groups, setGroups] = useState();\r\n  const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [CreateGroupPostData, setCreateGroupPostData] = useState({\r\n    name: '',\r\n    summary: '',\r\n    access_key: '',\r\n    user_id: '',\r\n  });\r\n\r\n  const getGroups = () => {\r\n    fetch(GroupsAPI) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setGroups(json);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, []);\r\n\r\n  const CreateGroupFetch = () => {\r\n    fetch(GroupsAPI, {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        name: CreateGroupPostData.name,\r\n        summary: CreateGroupPostData.summary,\r\n        access_key: CreateGroupPostData.access_key,\r\n        user_id: CreateGroupPostData.user_id,\r\n      }),\r\n    }).then(() => getGroups());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='Body'>\r\n        <div className='PageTitleFrame'>\r\n          <span className='PageTitle'>グループ一覧</span>\r\n        </div>\r\n        {Groups ? <Pagination setOffset={setOffset} dataleng={Groups.length} perPage={perPage}></Pagination> : ''}\r\n        <div className='addGroupButtonFrame'>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className='addGroupButton'\r\n            onClick={() => {\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            グループ追加\r\n          </Button>\r\n        </div>\r\n\r\n        {Groups ? (\r\n          <div className='GroupList'>\r\n            {Groups.slice(offset, offset + perPage).map((data) => (\r\n              <GroupInfo data={data} key={data.group_id}></GroupInfo>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {Groups ? <Pagination setOffset={setOffset} dataleng={Groups.length} perPage={perPage}></Pagination> : ''}\r\n      </div>\r\n      {modalVisible ? (\r\n        <CreateGroupModal\r\n          onClose={() => setModalVisible(false)}\r\n          PostData={CreateGroupPostData}\r\n          setPostData={setCreateGroupPostData}\r\n          CreateGroupFetch={CreateGroupFetch}\r\n        ></CreateGroupModal>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import './UserInfo.css';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport {Delete, Edit} from '@material-ui/icons';\r\n\r\nconst StyledDelete = styled(Delete)`\r\n  color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledEdit = styled(Edit)`\r\n  color: green;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst UserInfo = (props) => {\r\n  return (\r\n    <TableRow key={props.data.user_id} sx={{'&:last-child td, &:last-child th': {border: 0}}}>\r\n      <TableCell component='th' scope='row'>\r\n        {props.data.name}\r\n      </TableCell>\r\n      <TableCell align='center'>{props.data.mail}</TableCell>\r\n      <TableCell align='center'>{props.data.role}</TableCell>\r\n      <TableCell align='center'>\r\n        <StyledEdit></StyledEdit>\r\n      </TableCell>\r\n      <TableCell align='center'>\r\n        <StyledDelete></StyledDelete>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {UsersAPI} from '../../APILink';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport UserPagination from './Pagination';\r\nimport UserInfo from './UserInfo';\r\n\r\nimport './Body.css';\r\n\r\nconst Body = () => {\r\n  // const CreateGroup = (props) => {\r\n  //     return ReactDOM.createPortal(\r\n  //         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n  //         document.getElementById(\"modal-creategroup\")\r\n  //     );\r\n  // }\r\n  const [Users, setUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(UsersAPI) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUsers(json);\r\n        console.log(json);\r\n      });\r\n  }, []);\r\n\r\n  const [offset, setOffset] = useState(0);\r\n  const perPage = 5; // 1ページあたりに表示したいアイテムの数\r\n  // const [modalVisible,setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <div className='UsersBody'>\r\n      {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n\r\n      <div className='UsersPageTitleFrame'>\r\n        <span className='UsersPageTitle'>ユーザー一覧</span>\r\n      </div>\r\n\r\n      <div className='UserCreateButtons'>\r\n        <Button variant='contained' color='primary' className='CreateUserButton'>\r\n          新しく\r\n        </Button>\r\n        <Button variant='contained' color='primary' className='CreateUsersButton'>\r\n          複数\r\n        </Button>\r\n      </div>\r\n\r\n      <UserPagination setOffset={setOffset} dataleng={Users ? Users.length : 0} perPage={perPage}></UserPagination>\r\n\r\n      <TableContainer className='UserTable' component={Paper}>\r\n        <Table aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>名前</TableCell>\r\n              <TableCell align='center'>メールアドレス</TableCell>\r\n              <TableCell align='center'>権限</TableCell>\r\n              <TableCell align='center'>変更</TableCell>\r\n              <TableCell align='center'>削除</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Users\r\n              ? Users.slice(offset, offset + perPage).map((data) => (\r\n                  <UserInfo data={data} key={data.user_id}></UserInfo>\r\n                ))\r\n              : ''}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import {useEffect, useState} from 'react';\r\nimport {UsersAPI} from '../../APILink';\r\nimport './QuestionInfo.css';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst QuestionInfo = (props) => {\r\n  const [User, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(UsersAPI + '/' + props.data.user_id) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUser(json);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card className='QuestionInfoFrame'>\r\n      <div className='QuestionInfoGrid'>\r\n        <div>\r\n          <span className='elementName'>問題名</span>\r\n          {props.data.name}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>作成者</span>\r\n          {User ? User.name : ''}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>問題形式</span>\r\n          {props.data.mode}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>作成日</span>\r\n          {props.data.created_at}\r\n        </div>\r\n      </div>\r\n      <div className='QuestionInfoLinkGrid'>\r\n        <div className='QuestionInfoDeleteButtonFrame'>\r\n          <Button variant='contained' color='secondary' className='QuestionInfoDeleteButton'>\r\n            削除する\r\n          </Button>\r\n        </div>\r\n        <div className='QuestionInfoDetailButtonFrame'>\r\n          <Button variant='contained' color='primary' className='QuestionInfoDetailButton'>\r\n            詳細を見る\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuestionInfo;\r\n","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import {useState, useEffect} from 'react';\r\n//import ReactDOM from \"react-dom\";\r\nimport {QuestionsAPI} from '../../APILink';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport QuestionInfo from './QuestionInfo';\r\nimport Pagination from './Pagination';\r\n//import CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport './Questions.css';\r\n\r\n// const CreateGroup = (props) => {\r\n//     return ReactDOM.createPortal(\r\n//         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n//         document.getElementById(\"modal-creategroup\")\r\n//     );\r\n// }\r\n\r\nconst Questions = () => {\r\n  const [offset, setOffset] = useState(0);\r\n  const [Questions, setQuestions] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(QuestionsAPI) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setQuestions(json);\r\n        console.log(json);\r\n      });\r\n  }, []);\r\n  const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n  //const [modalVisible,setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <div className='Body'>\r\n      {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n      <div className='QuestionPageTitleFrame'>\r\n        <span className='QuestionPageTitle'>問題一覧</span>\r\n      </div>\r\n      <Pagination setOffset={setOffset} dataleng={Questions ? Questions.length : 0} perPage={perPage}></Pagination>\r\n      <div className='addQuestionButtonFrame'>\r\n        <Button color='primary' variant='contained' className='addQuestionButton'>\r\n          追加\r\n        </Button>\r\n        <Button color='primary' variant='contained' className='addQuestionsButton'>\r\n          複数追加\r\n        </Button>\r\n      </div>\r\n      {Questions ? (\r\n        <div className='QuestionList'>\r\n          {Questions.slice(offset, offset + perPage).map((data) => (\r\n            <QuestionInfo data={data} key={data.question_id}></QuestionInfo>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Pagination setOffset={setOffset} dataleng={Questions ? Questions.length : 0} perPage={perPage}></Pagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import './TeachingMaterialInfo.css';\r\n\r\nimport {useEffect, useState} from 'react';\r\nimport {UsersAPI} from '../../APILink';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #000;\r\n  font-size: 16px;\r\n  letter-spacing: 1.4px;\r\n  '&:hover': {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n/* TM = TeachingMaterial */\r\n\r\nconst TeachingMaterialInfo = (props) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(UsersAPI + '/' + props.data.user_id) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUser(json);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card className='TMInfoFrame'>\r\n      <div className='TMInfoGrid'>\r\n        <div>\r\n          <span className='elementName'>教材名</span>\r\n          {props.data.name}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>作成者</span>\r\n          {user ? user.name : ''}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>アクセスキー</span>\r\n          {props.data.access_key}\r\n        </div>\r\n        <div>\r\n          <span className='elementName'>作成日</span>\r\n          {props.data.created_at}\r\n        </div>\r\n      </div>\r\n      <div className='TMInfoLinkGrid'>\r\n        <div className='TMInfoDeleteButtonFrame'>\r\n          <Button variant='contained' color='secondary' className='TMInfoDeleteButton'>\r\n            削除する\r\n          </Button>\r\n        </div>\r\n        <div className='TMInfoDetailButtonFrame'>\r\n          <StyledLink to={'/TeachingMaterial/detail/'.concat(props.data.book_id)}>\r\n            <Button variant='contained' color='primary' className='TMInfoDetailButton'>\r\n              詳細を見る\r\n            </Button>\r\n          </StyledLink>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TeachingMaterialInfo;\r\n","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import \"./CreateTeachingMaterialModal.css\";\r\n\r\nconst CreateTeachingMaterialModal = (props) => {\r\n    const overlayClass = props.modalVisible ? \"Modal-Overlay\" : \"Modal-Overlay hiddenOverlay\";\r\n    const FormClass = props.modalVisible ? \"CreateGroupForm\" : \"CreateGroupForm hiddenForm\";\r\n    return <div>\r\n        <div className={overlayClass} onClick={() => {props.setModalVisible(false)}}>\r\n            &nbsp;\r\n        </div>\r\n        <form>\r\n            <div className={FormClass}>\r\n                Form建設予定地\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default CreateTeachingMaterialModal;","import {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BooksAPI} from '../../APILink';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TeachingMaterialInfo from './TeachingMaterialInfo';\r\nimport Pagination from './Pagination';\r\nimport CreateTeachingMaterialModal from './CreateTeachingMaterialModal';\r\n\r\nimport './TeachingMaterials.css';\r\nimport {useEffect} from 'react';\r\n\r\nconst CreateTeachingMaterial = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <CreateTeachingMaterialModal\r\n      modalVisible={props.modalVisible}\r\n      setModalVisible={props.setModalVisible}\r\n    ></CreateTeachingMaterialModal>,\r\n    document.getElementById('modal-creategroup')\r\n  );\r\n};\r\n\r\nconst Questions = () => {\r\n  const [offset, setOffset] = useState(0);\r\n  const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [Books, setBooks] = useState();\r\n  useEffect(() => {\r\n    fetch(BooksAPI) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setBooks(json);\r\n        console.log(json);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='Body'>\r\n      <CreateTeachingMaterial modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateTeachingMaterial>\r\n      <div className='TMPageTitleFrame'>\r\n        <span className='TMPageTitle'>教材一覧</span>\r\n      </div>\r\n      <Pagination setOffset={setOffset} dataleng={Books ? Books.length : 0} perPage={perPage}></Pagination>\r\n      <div className='addTMButtonFrame'>\r\n        <Button variant='contained' color='primary' className='addTMButton'>\r\n          追加\r\n        </Button>\r\n        <Button variant='contained' color='primary' className='addTMsButton'>\r\n          複数追加\r\n        </Button>\r\n      </div>\r\n      {Books ? (\r\n        <div className='TMList'>\r\n          {Books.slice(offset, offset + perPage).map((data) => (\r\n            <TeachingMaterialInfo data={data} key={data.books_id}></TeachingMaterialInfo>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Pagination setOffset={setOffset} dataleng={Books ? Books.length : 0} perPage={perPage}></Pagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {useParams} from 'react-router';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport {GroupsAPI, UsersAPI, BooksAPI} from '../../APILink';\r\n\r\nimport TeachingMaterialInfo from '../TeachingMaterials/TeachingMaterialInfo';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './GroupDetail.css';\r\n\r\nimport {Overray} from '../Overray';\r\nimport {Modal} from '../Modal';\r\n\r\nconst InputUnit = styled.div`\r\n  display: grid;\r\n  grid-template-columns: max-content 1fr;\r\n  grid-column-gap: 30px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst EditGroupButton = styled(Button)`\r\n  margin-right: 20px !important;\r\n  font-size: 18px !important;\r\n  border: solid 2px #777;\r\n  background-color: #ddd;\r\n  padding: 5px 20px !important;\r\n  box-shadow: 5px 5px 5px #00000040;\r\n  cursor: pointer;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst ModalTitle = styled.div`\r\n  text-align: left;\r\n  font-size: 20px;\r\n  padding: 7px 20px;\r\n  padding-left: 15px;\r\n  margin-bottom: 40px;\r\n  background: #f4f4f4; /*背景色*/\r\n  border-left: solid 8px #ff47ac; /*左線*/\r\n  border-bottom: solid 3px #d7d7d7; /*下線*/\r\n`;\r\n\r\nconst GroupDetail = () => {\r\n  const param = useParams();\r\n\r\n  const [GroupData, setGroupData] = useState();\r\n  const [CreatedBy, setCreatedBy] = useState();\r\n  const [BooksInGroup, setBooksInGroup] = useState([]); //Groupに対応したBooksを入れておく\r\n  const [Books, setBooks] = useState([]); //全てのBooksを入れておく\r\n  const [Users, setUsers] = useState(); //Formで使用\r\n\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  const [BookPostBody, setBookPostBody] = useState({\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({group_id: param['id'], book_id: '1'}),\r\n  });\r\n\r\n  const [EditGroupPostData, setEditGroupPostData] = useState({\r\n    name: '',\r\n    summary: '',\r\n    access_key: '',\r\n    user_id: '',\r\n  });\r\n\r\n  const getBookInGroup = () => {\r\n    if (typeof GroupData !== 'undefined') {\r\n      fetch(GroupsAPI + '/' + param['id'] + '/Books') //api\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          // console.log(json);\r\n          if (Array.isArray(json)) {\r\n            setBooksInGroup(json);\r\n          } else {\r\n            setBooksInGroup([json]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(UsersAPI) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUsers(json);\r\n      });\r\n  }, []);\r\n\r\n  const registerBook = () => {\r\n    fetch(GroupsAPI + '/addBook', BookPostBody) //api groups/addBook\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        getBookInGroup();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  const removeBook = () => {\r\n    fetch(GroupsAPI + '/removeBook', BookPostBody) //api groups/removeBook\r\n      .then((response) => response)\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        getBookInGroup();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  const BookPostChange = (id) => {\r\n    setBookPostBody({\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({group_id: param['id'], book_id: id}),\r\n    });\r\n    // console.log(BookPostBody);\r\n  };\r\n\r\n  const EditGroupFetch = () => {\r\n    //Group編集用Fetch\r\n    fetch(GroupsAPI + '/' + param['id'], {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        name: EditGroupPostData.name,\r\n        summary: EditGroupPostData.summary,\r\n        access_key: EditGroupPostData.access_key,\r\n        user_id: EditGroupPostData.user_id,\r\n      }),\r\n    }) //api\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        GroupDataFetch();\r\n      });\r\n  };\r\n\r\n  const EditGroupCheck = () => {\r\n    if (confirm('編集を保存しますか？')) {\r\n      EditGroupFetch();\r\n      setIsOpenModal(false);\r\n      // console.log(EditGroupPostData);\r\n    }\r\n  };\r\n\r\n  const GroupDataFetch = () => {\r\n    fetch(GroupsAPI + '/' + param['id']) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setGroupData(json);\r\n        // console.log(json);\r\n        setEditGroupPostData({\r\n          name: json.name,\r\n          summary: json.summary,\r\n          access_key: json.access_key,\r\n          user_id: json.user_id,\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //最初にGroupデータを取得\r\n    GroupDataFetch();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Groupデータ更新時に作成者名を取得\r\n    if (typeof GroupData !== 'undefined') {\r\n      fetch(UsersAPI + '/' + GroupData.user_id) //api\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          setCreatedBy(json.name);\r\n        });\r\n    }\r\n  }, [GroupData]);\r\n\r\n  useEffect(() => {\r\n    //Groupデータ更新時にグループに対応した教材を取得\r\n    getBookInGroup();\r\n  }, [GroupData]);\r\n\r\n  useEffect(() => {\r\n    //Groupデータ更新時に全ての教材を取得（教材登録などに使う）\r\n    if (typeof GroupData !== 'undefined') {\r\n      fetch(BooksAPI) //api\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          //console.log(json);\r\n          if (Array.isArray(json)) {\r\n            setBooks(json);\r\n          } else {\r\n            setBooks([json]);\r\n          }\r\n        });\r\n    }\r\n  }, [GroupData]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='GroupDetailPageTitleFrame'>\r\n        <span className='GroupDetailPageTitle'>グループ詳細</span>\r\n      </div>\r\n\r\n      <div className='editGroupDetailButtonFrame'>\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          className='editGroupDetailButton'\r\n          onClick={() => setIsOpenModal(true)}\r\n        >\r\n          編集\r\n        </Button>\r\n      </div>\r\n      <div class='GroupDetailFrame'>\r\n        {GroupData ? (\r\n          <div className='GroupDetailTopGrid'>\r\n            <div>\r\n              <span className='elementName'>グループ名</span>\r\n              {GroupData.name}\r\n            </div>\r\n            <div>\r\n              <span className='elementName'>作成者</span>\r\n              {CreatedBy ? CreatedBy : ''}\r\n            </div>\r\n            <div>\r\n              <span className='elementName'>アクセスキー</span>\r\n              {GroupData.access_key}\r\n            </div>\r\n            <div>\r\n              <span className='elementName'>作成日</span>\r\n              {GroupData.created_at}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <div className='GroupDetailBottom'>\r\n          <div>\r\n            <span className='elementName'>グループ概略</span>\r\n          </div>\r\n          {GroupData ? (\r\n            <div class='GroupDetailTextRange'>\r\n              {GroupData.summary.split(/(\\n)/).map((item) => {\r\n                return item.match(/\\n/) ? <br /> : item;\r\n              })}\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='GroupDetailPageTitleFrame-sub'>\r\n        <span className='GroupDetailPageTitle-sub'>グループ内教材一覧</span>\r\n      </div>\r\n\r\n      <div className='TMEditButtonFrameInGroup'>\r\n        <select\r\n          onChange={(e) => {\r\n            BookPostChange(e.target.value);\r\n          }}\r\n        >\r\n          {Books.map((data) => (\r\n            <option value={data.book_id} key={data.book_id}>\r\n              {data.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button variant='contained' color='primary' className='addTMButton' onClick={registerBook}>\r\n          追加\r\n        </Button>\r\n        <Button variant='contained' color='secondary' className='addTMsButton' onClick={removeBook}>\r\n          削除\r\n        </Button>\r\n      </div>\r\n      {BooksInGroup ? (\r\n        <div className='TMList'>\r\n          {BooksInGroup.map((data) => (\r\n            <TeachingMaterialInfo data={data.book} key={data.book.book_id}></TeachingMaterialInfo>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {/* Modal*/}\r\n      {isOpenModal ? (\r\n        <div>\r\n          <Modal>\r\n            {Users ? (\r\n              <div>\r\n                <ModalTitle className='ModalTitle'>編集画面</ModalTitle>\r\n\r\n                <InputUnit>\r\n                  <label htmlFor='groupname'>グループ名</label>\r\n                  <input\r\n                    type='text'\r\n                    id='groupname'\r\n                    value={EditGroupPostData.name}\r\n                    onChange={(e) => setEditGroupPostData({...EditGroupPostData, name: e.target.value})}\r\n                  ></input>\r\n                </InputUnit>\r\n                <InputUnit>\r\n                  <label htmlFor='username'>作成者</label>\r\n                  <select\r\n                    id='username'\r\n                    value={EditGroupPostData.user_id}\r\n                    onChange={(e) => setEditGroupPostData({...EditGroupPostData, user_id: e.target.value})}\r\n                  >\r\n                    {Users.map((data) => (\r\n                      <option value={data.user_id} key={data.user_id}>\r\n                        {data.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </InputUnit>\r\n                <InputUnit>\r\n                  <label htmlFor='accesskey'>アクセスキー</label>\r\n                  <input\r\n                    type='text'\r\n                    id='accesskey'\r\n                    value={EditGroupPostData.access_key}\r\n                    onChange={(e) => setEditGroupPostData({...EditGroupPostData, access_key: e.target.value})}\r\n                  ></input>\r\n                </InputUnit>\r\n                <InputUnit>\r\n                  <label htmlFor='summary'>グループ概略</label>\r\n                  <textarea\r\n                    id='summary'\r\n                    value={EditGroupPostData.summary}\r\n                    rows='5'\r\n                    onChange={(e) => setEditGroupPostData({...EditGroupPostData, summary: e.target.value})}\r\n                  ></textarea>\r\n                </InputUnit>\r\n                <EditGroupButton variant='contained' color='primary' onClick={() => EditGroupCheck()}>\r\n                  保存\r\n                </EditGroupButton>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Modal>\r\n          <Overray onClick={() => setIsOpenModal(false)}></Overray>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupDetail;\r\n","import {useEffect, useState} from 'react';\r\n\r\nimport {useParams} from 'react-router';\r\n\r\nimport QuestionInfo from '../Questions/QuestionInfo';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {BooksAPI, UsersAPI, QuestionsAPI} from '../../APILink';\r\n\r\nimport './TeachingMaterialDetail.css';\r\n\r\nconst TeachingMaterialDetail = () => {\r\n  const param = useParams();\r\n\r\n  const [Book, setBook] = useState();\r\n  const [createdBy, setCreatedBy] = useState();\r\n  const [questionInBook, setQuestionInBook] = useState(); //Bookに登録されてる問題\r\n  const [Questions, setQuestions] = useState(); //全ての問題\r\n\r\n  const [QuestionPostBody, setQuestionPostBody] = useState({\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({book_id: param['id'], question_id: '1'}),\r\n  });\r\n\r\n  const getQuestionInBook = () => {\r\n    if (typeof Book !== 'undefined') {\r\n      fetch(BooksAPI + '/' + param['id'] + '/questions') //api\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          console.log(json);\r\n          if (Array.isArray(json)) {\r\n            setQuestionInBook(json);\r\n          } else {\r\n            setQuestionInBook([json]);\r\n          }\r\n          console.log(questionInBook);\r\n        });\r\n    }\r\n  };\r\n\r\n  const registerQuestion = () => {\r\n    fetch(BooksAPI + '/addRecord', QuestionPostBody) //api groups/addBook\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        getQuestionInBook();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  const removeQuestion = () => {\r\n    fetch(BooksAPI + '/removeRecord', QuestionPostBody) //api groups/addBook\r\n      .then((response) => response)\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        getQuestionInBook();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  const QuestionPostChange = (id) => {\r\n    setQuestionPostBody({\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({book_id: param['id'], question_id: id}),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //最初にGroupデータを取得\r\n    fetch(BooksAPI + '/' + param['id']) //api\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setBook(json);\r\n        console.log(json);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Groupデータ更新時に作成者名を取得\r\n    if (typeof Book !== 'undefined') {\r\n      fetch(UsersAPI + '/' + Book.user_id) //api\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          setCreatedBy(json.name);\r\n        });\r\n    }\r\n  }, [Book]);\r\n\r\n  useEffect(() => {\r\n    //Groupデータ更新時に紐づけされてる問題を取得\r\n    getQuestionInBook();\r\n  }, [Book]);\r\n\r\n  useEffect(() => {\r\n    //Groupデータ更新時に紐づけされてる問題を取得\r\n    if (typeof Book !== 'undefined') {\r\n      fetch(QuestionsAPI) //api\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (Array.isArray(json)) {\r\n            setQuestions(json);\r\n          } else {\r\n            setQuestions([json]);\r\n          }\r\n        });\r\n    }\r\n  }, [Book]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='TMDetailPageTitleFrame'>\r\n        <span className='TMDetailPageTitle'>教材詳細</span>\r\n      </div>\r\n      <div className='editTMDetailButtonFrame'>\r\n        <Button variant='contained' color='secondary' className='editTMDetailButton'>\r\n          編集\r\n        </Button>\r\n      </div>\r\n\r\n      {Book ? (\r\n        <div class='TMDetailFrame'>\r\n          <div className='TMDetailTopGrid'>\r\n            <div>\r\n              <span className='elementName'>教材名</span>\r\n              {Book.name}\r\n            </div>\r\n            <div>\r\n              <span className='elementName'>作成者</span>\r\n              {createdBy}\r\n            </div>\r\n            <div>\r\n              <span className='elementName'>アクセスキー</span>\r\n              {Book.access_key}\r\n            </div>\r\n            <div>\r\n              <span className='elementName'>作成日</span>\r\n              {Book.created_at}\r\n            </div>\r\n          </div>\r\n          <div className='TMDetailBottom'>\r\n            <div>\r\n              <span className='elementName'>教材詳細情報</span>\r\n            </div>\r\n            <div class='TMDetailTextRange'>\r\n              {Book.summary.split(/(\\n)/).map((item) => {\r\n                return item.match(/\\n/) ? <br /> : item;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className='TMDetailPageTitleFrame-sub'>\r\n        <span className='TMDetailPageTitle-sub'>教材内問題一覧</span>\r\n      </div>\r\n      <div className='QuestionButtonsFrame'>\r\n        <select\r\n          onChange={(e) => {\r\n            QuestionPostChange(e.target.value);\r\n          }}\r\n        >\r\n          {Questions\r\n            ? Questions.map((data) => (\r\n                <option value={data.question_id} key={data.question_id}>\r\n                  {data.name}\r\n                </option>\r\n              ))\r\n            : ''}\r\n        </select>\r\n        <Button variant='contained' color='primary' className='addTMButton' onClick={() => registerQuestion()}>\r\n          追加\r\n        </Button>\r\n        <Button variant='contained' color='secondary' className='addTMsButton' onClick={() => removeQuestion()}>\r\n          削除\r\n        </Button>\r\n      </div>\r\n\r\n      {questionInBook ? (\r\n        <div className='QuestionList'>\r\n          {questionInBook.map((data) => (\r\n            <QuestionInfo data={data.question} key={data.question_id}></QuestionInfo>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeachingMaterialDetail;\r\n","// API GitHubリンク: https://github.com/HIT-matsumotolab/HelloC_API\r\n\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n\r\n//一覧ページ等\r\nimport Home from './components/Home/Home';\r\nimport Header from './components/Header';\r\nimport GroupBody from './components/Group/Body';\r\nimport UsersBody from './components/Users/Body';\r\nimport QuestionsBody from './components/Questions/Questions';\r\nimport TeachingMaterialsBody from './components/TeachingMaterials/TeachingMaterials';\r\n\r\n//詳細ページ\r\nimport GroupDetail from './components/GroupDetail/GroupDetail';\r\nimport TeachingMaterialDetail from './components/TMDetail/TeachingMaterialDetail';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <MuiThemeProvider>\r\n        <div>\r\n          <Header></Header>\r\n          <Switch>\r\n            {/* 一覧ページのルーティング */}\r\n            <Route exact path='/group'>\r\n              <Group></Group>\r\n            </Route>\r\n            <Route exact path='/users'>\r\n              <Users />\r\n            </Route>\r\n            <Route exact path='/questions'>\r\n              <Questions />\r\n            </Route>\r\n            <Route exact path='/teachingMaterials'>\r\n              <TeachingMaterials />\r\n            </Route>\r\n            <Route exact path='/'>\r\n              <Home />\r\n            </Route>\r\n\r\n            {/* 詳細ページのルーティング */}\r\n\r\n            <Route render={() => <GroupDetail />} path='/group/detail/:id(\\d+)' />\r\n\r\n            <Route render={() => <TeachingMaterialDetail />} path='/TeachingMaterial/detail/:id(\\d+)' />\r\n          </Switch>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nfunction Group() {\r\n  return (\r\n    <div>\r\n      <GroupBody></GroupBody>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Users() {\r\n  return <UsersBody></UsersBody>;\r\n}\r\n\r\nfunction Questions() {\r\n  return <QuestionsBody></QuestionsBody>;\r\n}\r\nfunction TeachingMaterials() {\r\n  return <TeachingMaterialsBody></TeachingMaterialsBody>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}