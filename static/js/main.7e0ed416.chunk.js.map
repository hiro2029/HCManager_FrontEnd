{"version":3,"sources":["components/Header.js","components/GroupInfo.js","components/Pagination.js","components/CreateGroupModal.js","components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","GroupInfo","props","data","groupName","createdBy","accesskey","date","class","Pagination","style","marginTop","marginBottom","pageCount","Math","ceil","dataleng","perPage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page_number","setOffset","containerClassName","pageClassName","pageLinkClassName","activeClassName","previousLabel","nextLabel","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","breakLabel","breakClassName","breakLinkClassName","CreateGroupModal","overlayClass","modalVisible","FormClass","onClick","setModalVisible","dummyData","CreateGroup","ReactDOM","createPortal","document","getElementById","Body","useState","offset","length","slice","map","Home","Group","Users","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.7e0ed416.chunk.js","sourcesContent":["import \"./Header.css\";\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            HelloCManager\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import \"./GroupInfo.css\";\r\n\r\n\r\nconst GroupInfo = (props) => {\r\n\r\n    return (\r\n            <div className=\"GroupInfoFrame\">\r\n                <div className=\"GroupInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">グループ名</span>\r\n                        {props.data.groupName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {props.data.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"GroupInfoLinkGrid\">\r\n                    <div class=\"GroupInfoDeleteButtonFrame\">\r\n                    <span className=\"GroupInfoDeleteButton\">削除する</span>\r\n                    </div>\r\n                    <div className=\"GroupInfoDetailButtonFrame\">\r\n                    <span className=\"GroupInfoDetailButton\">詳細を見る</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GroupInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import \"./CreateGroupModal.css\";\r\n\r\nconst CreateGroupModal = (props) => {\r\n    const overlayClass = props.modalVisible ? \"Modal-Overlay\" : \"Modal-Overlay hiddenOverlay\";\r\n    const FormClass = props.modalVisible ? \"CreateGroupForm\" : \"CreateGroupForm hiddenForm\";\r\n    return <div>\r\n        <div className={overlayClass} onClick={() => {props.setModalVisible(false)}}>\r\n            &nbsp;\r\n        </div>\r\n        <form>\r\n            <div className={FormClass}>\r\n                Form建設予定地\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default CreateGroupModal;","import React,{useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nimport GroupInfo from \"./GroupInfo\";\r\nimport Pagination from \"./Pagination\";\r\nimport CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./Body.css\"\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        groupName:\"group1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\"\r\n    },\r\n    {\r\n        groupName:\"group2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\"\r\n    },\r\n    {\r\n        groupName:\"group3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\"\r\n    },\r\n    {\r\n        groupName:\"group4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\"\r\n    },\r\n    {\r\n        groupName:\"group5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\"\r\n    },\r\n];\r\n\r\nconst CreateGroup = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n        document.getElementById(\"modal-creategroup\")\r\n    );\r\n}\r\n\r\n\r\nconst Body = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup>\r\n            <div className=\"PageTitleFrame\">\r\n            <span className=\"PageTitle\">\r\n                グループ一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addGroupButtonFrame\">\r\n            <span className=\"addGroupButton\" onClick={ () => {setModalVisible(true)}}>グループ追加</span>\r\n            </div>\r\n            <div className=\"GroupList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <GroupInfo data={data}></GroupInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Body from \"./components/Body\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n            <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/group\">group</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/users\">Users</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/group\">\r\n            <Group></Group>\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nfunction Home() {\r\n    return <h2>Home</h2>;\r\n  }\r\n  \r\n  function Group() {\r\n    return <div>\r\n            <Header></Header>\r\n            <Body></Body>\r\n    </div>;\r\n  }\r\n  \r\n  function Users() {\r\n    return <h2>Users</h2>;\r\n  }\r\n\r\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}