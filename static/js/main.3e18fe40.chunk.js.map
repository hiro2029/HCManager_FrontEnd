{"version":3,"sources":["components/Home/Home.js","components/Header.js","components/Navigation.js","components/Group/GroupInfo.js","components/Group/Pagination.js","components/Group/CreateGroupModal.js","components/Group/Body.js","components/Users/Pagination.js","components/Users/UserInfo.js","components/Users/Body.js","components/Questions/QuestionInfo.js","components/Questions/Pagination.js","components/Questions/Questions.js","components/TeachingMaterials/TeachingMaterialInfo.js","components/TeachingMaterials/Pagination.js","components/TeachingMaterials/TeachingMaterials.js","components/GroupDetail/GroupDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","Header","href","Navigation","GroupInfo","props","data","groupName","createdBy","accesskey","date","concat","id","Pagination","style","marginTop","marginBottom","pageCount","Math","ceil","dataleng","perPage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page_number","setOffset","containerClassName","pageClassName","pageLinkClassName","activeClassName","previousLabel","nextLabel","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","breakLabel","breakClassName","breakLinkClassName","CreateGroupModal","overlayClass","modalVisible","FormClass","onClick","setModalVisible","dummyData","CreateGroup","ReactDOM","createPortal","document","getElementById","Body","useState","offset","length","slice","map","UserInfo","UserName","Email","Authority","UserDummyData","class","border","questionName","questionType","Questions","TeachingMaterialName","groupId","dummyTM","dummyGroup","overview","GroupDetail","param","useParams","detail","find","element","split","item","match","filter","Group","Users","TeachingMaterials","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.3e18fe40.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home  = () => {\r\n\r\n    return <div className=\"topHeading\">HelloCManager制作中です</div>\r\n}\r\n\r\nexport default Home;","import \"./Header.css\";\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <a className=\"HeaderLink\" href=\"/\">\r\n            HelloCManager\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n          <nav className=\"Navigation\">\r\n            <ul className=\"NavigationList\">\r\n            <a href=\"/\" className=\"NavigationAnc\">\r\n                <li className=\"NavigationUnit\">\r\n                    <span >TOP</span>\r\n                </li>\r\n              </a>\r\n              <a href=\"/group\" className=\"NavigationAnc\">\r\n                <li className=\"NavigationUnit\">\r\n                    <span >グループ一覧</span>\r\n                </li>\r\n              </a>\r\n              <a href=\"/users\" className=\"NavigationAnc\">\r\n                <li className=\"NavigationUnit\">\r\n                    <span >ユーザ一覧</span>\r\n                </li>\r\n              </a>\r\n              <a href=\"/questions\" className=\"NavigationAnc\">\r\n                <li className=\"NavigationUnit\">\r\n                    <span >問題一覧</span>\r\n                </li>\r\n              </a>\r\n              <a href=\"/teachingMaterials\" className=\"NavigationAnc\">\r\n                <li className=\"NavigationUnit\">\r\n                    <span >教材一覧</span>\r\n                </li>\r\n              </a>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import \"./GroupInfo.css\";\r\n\r\n\r\nconst GroupInfo = (props) => {\r\n\r\n    return (\r\n            <div className=\"GroupInfoFrame\">\r\n                <div className=\"GroupInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">グループ名</span>\r\n                        {props.data.groupName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {props.data.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"GroupInfoLinkGrid\">\r\n                    <div className=\"GroupInfoDeleteButtonFrame\">\r\n                    <span className=\"GroupInfoDeleteButton\">削除する</span>\r\n                    </div>\r\n                    <div className=\"GroupInfoDetailButtonFrame\">\r\n                    <a className=\"GroupInfoDetailButton\" href={\"/group/detail/\".concat(props.data.id)}>詳細を見る</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GroupInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import \"./CreateGroupModal.css\";\r\n\r\nconst CreateGroupModal = (props) => {\r\n    const overlayClass = props.modalVisible ? \"Modal-Overlay\" : \"Modal-Overlay hiddenOverlay\";\r\n    const FormClass = props.modalVisible ? \"CreateGroupForm\" : \"CreateGroupForm hiddenForm\";\r\n    return <div>\r\n        <div className={overlayClass} onClick={() => {props.setModalVisible(false)}}>\r\n            &nbsp;\r\n        </div>\r\n        <form>\r\n            <div className={FormClass}>\r\n                Form建設予定地\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default CreateGroupModal;","import React,{useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nimport GroupInfo from \"./GroupInfo\";\r\nimport Pagination from \"./Pagination\";\r\nimport CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./Body.css\"\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        id:1,\r\n        groupName:\"group1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\"\r\n    },\r\n    {\r\n        id:2,\r\n        groupName:\"group2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\"\r\n    },\r\n    {\r\n        id:3,\r\n        groupName:\"group3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\"\r\n    },\r\n    {\r\n        id:4,\r\n        groupName:\"group4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\"\r\n    },\r\n    {\r\n        id:5,\r\n        groupName:\"group5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\"\r\n    },\r\n];\r\n\r\nconst CreateGroup = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n        document.getElementById(\"modal-creategroup\")\r\n    );\r\n}\r\n\r\n\r\nconst Body = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup>\r\n            <div className=\"PageTitleFrame\">\r\n            <span className=\"PageTitle\">\r\n                グループ一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addGroupButtonFrame\">\r\n            <span className=\"addGroupButton\" onClick={ () => {setModalVisible(true)}}>グループ追加</span>\r\n            </div>\r\n            <div className=\"GroupList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <GroupInfo data={data} key={data.id}></GroupInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import \"./UserInfo.css\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    return (\r\n        <tr>\r\n            <th>{props.data.UserName}</th>\r\n            <th>{props.data.Email}</th>\r\n            <th>{props.data.Authority}</th>\r\n            <th>変更</th>\r\n            <th>削除</th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React,{useState} from \"react\";\r\n\r\n\r\nimport UserPagination from \"./Pagination\";\r\nimport UserInfo from \"./UserInfo\";\r\n\r\nimport \"./Body.css\";\r\n\r\nconst UserDummyData = [\r\n    {\r\n        UserName:\"test1\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"testtest2\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"test3\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"test4test\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"Professor\",\r\n    },\r\n    {\r\n        UserName:\"test5\",\r\n        Email:\"test@testtestest.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"test6\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"Admin\",\r\n    },\r\n];\r\n\r\n\r\nconst Body = () => {\r\n\r\n    // const CreateGroup = (props) => {\r\n    //     return ReactDOM.createPortal(\r\n    //         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n    //         document.getElementById(\"modal-creategroup\")\r\n    //     );\r\n    // }\r\n    \r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 5; // 1ページあたりに表示したいアイテムの数\r\n   // const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return <div className=\"UsersBody\">\r\n                {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n\r\n                <div className=\"UsersPageTitleFrame\">\r\n                    <span className=\"UsersPageTitle\">\r\n                        ユーザー一覧\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"UserCreateButtons\">\r\n                    <div class=\"CreateUserButton\">\r\n                        新しく\r\n                    </div>\r\n                    <div className=\"CreateUsersButton\">\r\n                        複数\r\n                    </div>\r\n                </div>\r\n\r\n                <UserPagination setOffset={setOffset} dataleng={UserDummyData.length} perPage={perPage}></UserPagination>\r\n\r\n                <table border=\"1\"className=\"UserList\">\r\n                    <tr>\r\n                        <th>名前</th>\r\n                        <th>メールアドレス</th>\r\n                        <th>権限</th>\r\n                        <th>変更</th>\r\n                        <th>削除</th>\r\n                    </tr>\r\n                {UserDummyData.slice(offset,offset + perPage).map((data) => <UserInfo data={data} key={data.UserName}></UserInfo>)}\r\n                </table>\r\n    </div>\r\n}\r\n\r\nexport default Body;","import \"./QuestionInfo.css\";\r\n\r\n\r\nconst GroupInfo = (props) => {\r\n\r\n    return (\r\n            <div className=\"QuestionInfoFrame\">\r\n                <div className=\"QuestionInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">問題名</span>\r\n                        {props.data.questionName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">問題形式</span>\r\n                        {props.data.questionType}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"QuestionInfoLinkGrid\">\r\n                    <div className=\"QuestionInfoDeleteButtonFrame\">\r\n                    <span className=\"QuestionInfoDeleteButton\">削除する</span>\r\n                    </div>\r\n                    <div className=\"QuestionInfoDetailButtonFrame\">\r\n                    <span className=\"QuestionInfoDetailButton\">詳細を見る</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GroupInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React,{useState} from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\n\r\n\r\nimport QuestionInfo from \"./QuestionInfo\";\r\nimport Pagination from \"./Pagination\";\r\n//import CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./Questions.css\";\r\n\r\n\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        questionName:\"group1\",\r\n        createdBy:\"admin1\",\r\n        questionType:\"test\",\r\n        date:\"dummy1\"\r\n    },\r\n    {\r\n        questionName:\"group2\",\r\n        createdBy:\"admin2\",\r\n        questionType:\"test\",\r\n        date:\"dummy2\"\r\n    },\r\n    {\r\n        questionName:\"group3\",\r\n        createdBy:\"admin3\",\r\n        questionType:\"test\",\r\n        date:\"dummy3\"\r\n    },\r\n    {\r\n        questionName:\"group4\",\r\n        createdBy:\"admin4\",\r\n        questionType:\"test\",\r\n        date:\"dummy4\"\r\n    },\r\n    {\r\n        questionName:\"group5\",\r\n        createdBy:\"admin5\",\r\n        questionType:\"test\",\r\n        date:\"dummy5\"\r\n    },\r\n];\r\n\r\n// const CreateGroup = (props) => {\r\n//     return ReactDOM.createPortal(\r\n//         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n//         document.getElementById(\"modal-creategroup\")\r\n//     );\r\n// }\r\n\r\n\r\nconst Questions = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    //const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n            <div className=\"QuestionPageTitleFrame\">\r\n            <span className=\"QuestionPageTitle\">\r\n                問題一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addQuestionButtonFrame\">\r\n            <span className=\"addQuestionButton\" >追加</span>\r\n            <span className=\"addQuestionsButton\" >複数追加</span>\r\n            </div>\r\n            <div className=\"QuestionList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <QuestionInfo data={data} key={data.groupName}></QuestionInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questions;","import \"./TeachingMaterialInfo.css\";\r\n\r\n/* TM = TeachingMaterial */\r\n\r\nconst GroupInfo = (props) => {\r\n\r\n    return (\r\n            <div className=\"TMInfoFrame\">\r\n                <div className=\"TMInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">教材名</span>\r\n                        {props.data.TeachingMaterialName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {props.data.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"TMInfoLinkGrid\">\r\n                    <div className=\"TMInfoDeleteButtonFrame\">\r\n                    <span className=\"TMInfoDeleteButton\">削除する</span>\r\n                    </div>\r\n                    <div className=\"TMInfoDetailButtonFrame\">\r\n                    <span className=\"TMInfoDetailButton\">詳細を見る</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GroupInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React,{useState} from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\n\r\n\r\nimport TeachingMaterialInfo from \"./TeachingMaterialInfo\";\r\nimport Pagination from \"./Pagination\";\r\n//import CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./TeachingMaterials.css\";\r\n\r\n\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        TeachingMaterialName:\"TM1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        groupId:1\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        groupId:2\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        groupId:3\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        groupId:4\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        groupId:5\r\n    },\r\n];\r\n\r\n// const CreateGroup = (props) => {\r\n//     return ReactDOM.createPortal(\r\n//         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n//         document.getElementById(\"modal-creategroup\")\r\n//     );\r\n// }\r\n\r\n\r\nconst Questions = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    //const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n            <div className=\"TMPageTitleFrame\">\r\n            <span className=\"TMPageTitle\">\r\n                教材一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addTMButtonFrame\">\r\n            <span className=\"addTMButton\" >追加</span>\r\n            <span className=\"addTMsButton\" >複数追加</span>\r\n            </div>\r\n            <div className=\"TMList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <TeachingMaterialInfo data={data} key={data.groupName}></TeachingMaterialInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questions;","import React from \"react\";\r\n\r\nimport { useParams } from \"react-router\";\r\n\r\nimport TeachingMaterialInfo from \"../TeachingMaterials/TeachingMaterialInfo\";\r\n\r\nimport \"./GroupDetail.css\";\r\n\r\n\r\n//とりあえずダミーデータにしてます（本来はAPIから取得）\r\nconst dummyTM = [\r\n    {\r\n        TeachingMaterialName:\"TM1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        groupId:1\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        groupId:2\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        groupId:3\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        groupId:4\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        groupId:5\r\n    },\r\n];\r\n\r\nconst dummyGroup = [\r\n    {\r\n        id:1,\r\n        groupName:\"group1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n    {\r\n        id:2,\r\n        groupName:\"group2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n    {\r\n        id:3,\r\n        groupName:\"group3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n    {\r\n        id:4,\r\n        groupName:\"group4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n    {\r\n        id:5,\r\n        groupName:\"group5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n];\r\n\r\n\r\nconst GroupDetail = () => {\r\n    const param = useParams();\r\n    const detail = dummyGroup.find(element => element.id == param[\"id\"]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"GroupDetailPageTitleFrame\">\r\n                <span className=\"GroupDetailPageTitle\">\r\n                    グループ詳細\r\n                </span>\r\n            </div>\r\n\r\n            <div class=\"GroupDetailFrame\">\r\n                <div className=\"GroupDetailTopGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">グループ名</span>\r\n                        {detail.groupName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {detail.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {detail.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {detail.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"GroupDetailBottom\">\r\n                    <div>\r\n                    <span className=\"elementName\">グループ概略</span>\r\n                    </div>\r\n                    <div class=\"GroupDetailTextRange\">{detail.overview.split(/(\\n)/).map((item) => {\r\n                        return item.match(/\\n/) ? <br /> : item\r\n                    })}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"addTMButtonFrame\">\r\n                <span className=\"addTMButton\" >追加</span>\r\n                <span className=\"addTMsButton\" >複数追加</span>\r\n            </div>\r\n            <div className=\"TMList\">\r\n                    {dummyTM.filter(element => element.groupId == param[\"id\"]).map((data) => <TeachingMaterialInfo data={data} key={data.groupName}></TeachingMaterialInfo>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupDetail;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n//一覧ページ等\r\nimport Home from \"./components/Home/Home\";\r\nimport Header from \"./components/Header\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport GroupBody from \"./components/Group/Body\";\r\nimport UsersBody from \"./components/Users/Body\";\r\nimport QuestionsBody from \"./components/Questions/Questions\";\r\nimport TeachingMaterialsBody from \"./components/TeachingMaterials/TeachingMaterials\";\r\n\r\n//詳細ページ\r\nimport GroupDetail from \"./components/GroupDetail/GroupDetail\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n      <Router>\r\n        <div>\r\n\r\n          <Header></Header>\r\n          <Navigation></Navigation>\r\n          <Switch>\r\n\r\n            {/* 一覧ページのルーティング */}\r\n            <Route exact path=\"/group\">\r\n              <Group></Group>\r\n            </Route>\r\n            <Route exact path=\"/users\">\r\n              <Users />\r\n            </Route>\r\n            <Route exact path=\"/questions\">\r\n              <Questions />\r\n            </Route>\r\n            <Route exact path=\"/teachingMaterials\">\r\n              <TeachingMaterials />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n\r\n            {/* 詳細ページのルーティング */}\r\n\r\n            <Route render = {() => <GroupDetail/>\r\n            } path=\"/group/detail/:id(\\d+)\"/>\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n}\r\n\r\n  function Group() {\r\n    return <div>\r\n            <GroupBody></GroupBody>\r\n    </div>;\r\n  }\r\n  \r\n  function Users() {\r\n    return <UsersBody></UsersBody>;\r\n  }\r\n\r\n  function Questions() {\r\n    return <QuestionsBody></QuestionsBody>\r\n  }\r\n  function TeachingMaterials(){\r\n    return <TeachingMaterialsBody></TeachingMaterialsBody>\r\n  }\r\n\r\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}