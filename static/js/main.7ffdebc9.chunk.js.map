{"version":3,"sources":["components/Home/Home.js","components/Navigation.js","components/Header.js","components/Group/GroupInfo.js","components/Group/Pagination.js","components/Group/CreateGroupModal.js","components/Group/Body.js","components/Users/Pagination.js","components/Users/UserInfo.js","components/Users/Body.js","components/Questions/QuestionInfo.js","components/Questions/Pagination.js","components/Questions/Questions.js","components/TeachingMaterials/TeachingMaterialInfo.js","components/TeachingMaterials/Pagination.js","components/TeachingMaterials/TeachingMaterials.js","components/GroupDetail/GroupDetail.js","components/TMDetail/TeachingMaterialDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","StyledLink","styled","Link","Navigation","props","docked","width","open","onRequestChange","setOpenNavigation","to","onClick","Header","useState","openNavigation","AppBar","position","onLeftIconButtonTouchTap","color","Typography","variant","GroupInfo","Card","data","groupName","createdBy","accesskey","date","Button","concat","id","Pagination","style","marginTop","marginBottom","pageCount","Math","ceil","dataleng","perPage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page_number","setOffset","containerClassName","pageClassName","pageLinkClassName","activeClassName","previousLabel","nextLabel","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","breakLabel","breakClassName","breakLinkClassName","CreateGroupModal","overlayClass","modalVisible","FormClass","setModalVisible","dummyData","CreateGroup","ReactDOM","createPortal","document","getElementById","Body","offset","length","slice","map","UserInfo","TableRow","sx","border","TableCell","component","scope","UserName","align","Email","Authority","UserDummyData","TableContainer","Paper","Table","TableHead","TableBody","QuestionInfo","questionName","questionType","TMId","Questions","TeachingMaterialName","groupId","dummyTM","dummyGroup","overview","GroupDetail","param","useParams","detail","find","element","class","split","item","match","filter","dummyQuestions","TeachingMaterialDetail","Group","Users","TeachingMaterials","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"oiBASeA,EALD,WAEV,OAAO,qBAAKC,UAAU,aAAf,0D,6ECOLC,G,OAAaC,YAAOC,IAAPD,CAAH,kJAkFDE,EAxEI,SAACC,GAChB,OA8BI,cA7BA,CA6BC,IAAD,CACAC,QAAQ,EACRC,MAAO,IACPC,KAAMH,EAAMG,KACZC,gBAAiB,kBAAMJ,EAAMK,mBAAkB,IAJ/C,UAMI,cAACT,EAAD,CAAYU,GAAG,IAAIC,QAAS,kBAAMP,EAAMK,mBAAkB,IAA1D,SACE,cAAC,IAAD,oBAKF,cAACT,EAAD,CAAYU,GAAG,SAASC,QAAS,kBAAMP,EAAMK,mBAAkB,IAA/D,SACE,cAAC,IAAD,qDAKF,cAACT,EAAD,CAAYU,GAAG,SAASC,QAAS,kBAAMP,EAAMK,mBAAkB,IAA/D,SACE,cAAC,IAAD,+CAKF,cAACT,EAAD,CAAYU,GAAG,aAAaC,QAAS,kBAAMP,EAAMK,mBAAkB,IAAnE,SACE,cAAC,IAAD,yCAKF,cAACT,EAAD,CAAYU,GAAG,qBAAqBC,QAAS,kBAAMP,EAAMK,mBAAkB,IAA3E,SACE,cAAC,IAAD,6CCxDCG,EArBA,WACX,MAA2CC,oBAAS,GAApD,mBAAOC,EAAP,KAAsBL,EAAtB,KAEA,OACI,gCACA,cAAC,EAAD,CAAYF,KAAMO,EAAgBL,kBAAmBA,IACrD,eAACM,EAAA,EAAD,CAAQC,SAAS,SAASjB,UAAU,SAASkB,yBAA0B,kBAAMR,GAAkB,IAA/F,UACA,cAAC,IAAD,CACQS,MAAM,UACN,aAAW,OACXP,QAAS,kBAAMF,GAAkB,IAHzC,SAIE,cAAC,IAAD,CAAUV,UAAU,eAElB,cAACoB,EAAA,EAAD,CAAYpB,UAAU,QAAQqB,QAAQ,KAAKF,MAAM,UAAjD,mC,2BCTNlB,EAAaC,YAAOC,IAAPD,CAAH,iJAgDDoB,EArCG,SAACjB,GAEf,OACQ,eAACkB,EAAA,EAAD,CAAMvB,UAAU,iBAAhB,UACI,sBAAKA,UAAU,gBAAf,UACI,gCACI,sBAAMA,UAAU,cAAhB,4CACCK,EAAMmB,KAAKC,aAEhB,gCACI,sBAAMzB,UAAU,cAAhB,gCACCK,EAAMmB,KAAKE,aAEhB,gCACI,sBAAM1B,UAAU,cAAhB,kDACCK,EAAMmB,KAAKG,aAEhB,gCACI,sBAAM3B,UAAU,cAAhB,gCACCK,EAAMmB,KAAKI,WAIpB,sBAAK5B,UAAU,oBAAf,UACI,qBAAKA,UAAU,6BAAf,SACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,YAAYnB,UAAU,wBAAxD,wCAEA,qBAAKA,UAAU,6BAAf,SACA,cAAC,EAAD,CAAYW,GAAI,iBAAiBmB,OAAOzB,EAAMmB,KAAKO,IAAnD,SACA,cAACF,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,wBAAtD,uD,iBClBLgC,EAhCI,SAAC3B,GAOhB,OAAO,8BACH,cAAC,IAAD,CACI4B,MAAO,CAAEC,UAAW,GAAIC,aAAc,KACtCC,UAAWC,KAAKC,KAAKjC,EAAMkC,SAASlC,EAAMmC,SAC1CC,qBAAsB,EACtBC,mBAAoB,GACpBC,aAXiB,SAACnB,GACtB,IAAIoB,EAAcpB,EAAI,SACtBnB,EAAMwC,UAAUD,EAAYvC,EAAMmC,UAU9BM,mBAAmB,aACnBC,cAAc,YACdC,kBAAkB,YAClBC,gBAAgB,SAChBC,cAAc,IACdC,UAAU,IACVC,kBAAkB,YAClBC,cAAc,YACdC,sBAAsB,YACtBC,kBAAkB,YAClBC,kBAAkB,WAClBC,WAAW,MACXC,eAAe,YACfC,mBAAmB,iBCZhBC,G,OAfU,SAACvD,GACtB,IAAMwD,EAAexD,EAAMyD,aAAe,gBAAkB,8BACtDC,EAAY1D,EAAMyD,aAAe,kBAAoB,6BAC3D,OAAO,gCACH,qBAAK9D,UAAW6D,EAAcjD,QAAS,WAAOP,EAAM2D,iBAAgB,IAApE,kBAGA,+BACI,qBAAKhE,UAAW+D,EAAhB,uDCGNE,G,OAAY,CACd,CACIlC,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,UAET,CACIG,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,UAET,CACIG,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,UAET,CACIG,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,UAET,CACIG,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,YAIPsC,EAAc,SAAC7D,GACjB,OAAO8D,IAASC,aACZ,cAAC,EAAD,CAAkBN,aAAczD,EAAMyD,aAAcE,gBAAiB3D,EAAM2D,kBAC3EK,SAASC,eAAe,uBA+BjBC,EA1BF,WAET,MAA2BzD,mBAAS,GAApC,mBAAO0D,EAAP,KAAc3B,EAAd,KAEA,EAAuC/B,oBAAS,GAAhD,mBAAOgD,EAAP,KAAoBE,EAApB,KAEA,OACI,sBAAKhE,UAAU,OAAf,UACI,cAAC,EAAD,CAAa8D,aAAcA,EAAcE,gBAAiBA,IAC1D,qBAAKhE,UAAU,iBAAf,SACA,sBAAMA,UAAU,YAAhB,oDAIA,cAAC,EAAD,CAAY6C,UAAWA,EAAWN,SAAU0B,EAAUQ,OAAQjC,QAXtD,IAYR,qBAAKxC,UAAU,sBAAf,SACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,iBAAiBY,QAAU,WAAOoD,GAAgB,IAAxG,oDAEA,qBAAKhE,UAAU,YAAf,SACCiE,EAAUS,MAAMF,EAAOA,EAhBhB,GAgBkCG,KAAI,SAACnD,GAAD,OAAU,cAAC,EAAD,CAAWA,KAAMA,GAAWA,EAAKO,SAEzF,cAAC,EAAD,CAAYc,UAAWA,EAAWN,SAAU0B,EAAUQ,OAAQjC,QAlBtD,Q,+DC5BLR,EAhCI,SAAC3B,GAOhB,OAAO,8BACH,cAAC,IAAD,CACI4B,MAAO,CAAEC,UAAW,GAAIC,aAAc,KACtCC,UAAWC,KAAKC,KAAKjC,EAAMkC,SAASlC,EAAMmC,SAC1CC,qBAAsB,EACtBC,mBAAoB,GACpBC,aAXiB,SAACnB,GACtB,IAAIoB,EAAcpB,EAAI,SACtBnB,EAAMwC,UAAUD,EAAYvC,EAAMmC,UAU9BM,mBAAmB,aACnBC,cAAc,YACdC,kBAAkB,YAClBC,gBAAgB,SAChBC,cAAc,IACdC,UAAU,IACVC,kBAAkB,YAClBC,cAAc,YACdC,sBAAsB,YACtBC,kBAAkB,YAClBC,kBAAkB,WAClBC,WAAW,MACXC,eAAe,YACfC,mBAAmB,iBCLhBiB,G,OAlBE,SAACvE,GAEd,OACI,eAACwE,EAAA,EAAD,CAEAC,GAAI,CAAE,mCAAoC,CAAEC,OAAQ,IAFpD,UAIA,cAACC,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,MAAhC,SACK7E,EAAMmB,KAAK2D,WAEhB,cAACH,EAAA,EAAD,CAAWI,MAAM,SAAjB,SAA2B/E,EAAMmB,KAAK6D,QACtC,cAACL,EAAA,EAAD,CAAWI,MAAM,SAAjB,SAA2B/E,EAAMmB,KAAK8D,YACtC,cAACN,EAAA,EAAD,CAAWI,MAAM,SAAjB,0BACA,cAACJ,EAAA,EAAD,CAAWI,MAAM,SAAjB,4BATK/E,EAAMmB,KAAK2D,YCUlBI,G,OAAgB,CAClB,CACIJ,SAAS,QACTE,MAAM,gBACNC,UAAU,WAEd,CACIH,SAAS,YACTE,MAAM,gBACNC,UAAU,WAEd,CACIH,SAAS,QACTE,MAAM,gBACNC,UAAU,WAEd,CACIH,SAAS,YACTE,MAAM,gBACNC,UAAU,aAEd,CACIH,SAAS,QACTE,MAAM,uBACNC,UAAU,WAEd,CACIH,SAAS,QACTE,MAAM,gBACNC,UAAU,WA0DHf,EArDF,WAST,MAA2BzD,mBAAS,GAApC,mBAAO0D,EAAP,KAAc3B,EAAd,KAIA,OAAO,sBAAK7C,UAAU,YAAf,UAGK,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,iBAAhB,oDAKJ,sBAAKA,UAAU,oBAAf,UACI,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,mBAAtD,gCAGA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,oBAAtD,6BAKJ,cAAC,EAAD,CAAgB6C,UAAWA,EAAWN,SAAUgD,EAAcd,OAAQjC,QArBlE,IAuBJ,cAACgD,EAAA,EAAD,CAAgBxF,UAAU,YAAYiF,UAAWQ,IAAjD,SACA,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACC,EAAA,EAAD,UACA,eAACd,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,CAAWI,MAAM,SAAjB,wDACA,cAACJ,EAAA,EAAD,CAAWI,MAAM,SAAjB,0BACA,cAACJ,EAAA,EAAD,CAAWI,MAAM,SAAjB,0BACA,cAACJ,EAAA,EAAD,CAAWI,MAAM,SAAjB,+BAGJ,cAACQ,EAAA,EAAD,UACCL,EAAcb,MAAMF,EAAOA,EAnC5B,GAmC8CG,KAAI,SAACnD,GAAD,OAAU,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAK2D,wBCzDjGU,G,OAlCM,SAACxF,GAElB,OACQ,eAACkB,EAAA,EAAD,CAAMvB,UAAU,oBAAhB,UACI,sBAAKA,UAAU,mBAAf,UACI,gCACI,sBAAMA,UAAU,cAAhB,gCACCK,EAAMmB,KAAKsE,gBAEhB,gCACI,sBAAM9F,UAAU,cAAhB,gCACCK,EAAMmB,KAAKE,aAEhB,gCACI,sBAAM1B,UAAU,cAAhB,sCACCK,EAAMmB,KAAKuE,gBAEhB,gCACI,sBAAM/F,UAAU,cAAhB,gCACCK,EAAMmB,KAAKI,WAGpB,sBAAK5B,UAAU,uBAAf,UACI,qBAAKA,UAAU,gCAAf,SACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,YAAYnB,UAAU,2BAAxD,wCAEA,qBAAKA,UAAU,gCAAf,SACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,2BAAtD,sDCDLgC,EAhCI,SAAC3B,GAOhB,OAAO,8BACH,cAAC,IAAD,CACI4B,MAAO,CAAEC,UAAW,GAAIC,aAAc,KACtCC,UAAWC,KAAKC,KAAKjC,EAAMkC,SAASlC,EAAMmC,SAC1CC,qBAAsB,EACtBC,mBAAoB,GACpBC,aAXiB,SAACnB,GACtB,IAAIoB,EAAcpB,EAAI,SACtBnB,EAAMwC,UAAUD,EAAYvC,EAAMmC,UAU9BM,mBAAmB,aACnBC,cAAc,YACdC,kBAAkB,YAClBC,gBAAgB,SAChBC,cAAc,IACdC,UAAU,IACVC,kBAAkB,YAClBC,cAAc,YACdC,sBAAsB,YACtBC,kBAAkB,YAClBC,kBAAkB,WAClBC,WAAW,MACXC,eAAe,YACfC,mBAAmB,iBCdzBM,G,OAAY,CACd,CACIlC,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,YAuCEqE,EA3BG,WAEd,MAA2BnF,mBAAS,GAApC,mBAAO0D,EAAP,KAAc3B,EAAd,KAIA,OACI,sBAAK7C,UAAU,OAAf,UAEI,qBAAKA,UAAU,yBAAf,SACA,sBAAMA,UAAU,oBAAhB,wCAIA,cAAC,EAAD,CAAY6C,UAAWA,EAAWN,SAAU0B,EAAUQ,OAAQjC,QAXtD,IAYR,sBAAKxC,UAAU,yBAAf,UACA,cAAC6B,EAAA,EAAD,CAAQV,MAAM,UAAUE,QAAQ,YAAYrB,UAAU,oBAAtD,0BACA,cAAC6B,EAAA,EAAD,CAAQV,MAAM,UAAUE,QAAQ,YAAYrB,UAAU,qBAAtD,yCAEA,qBAAKA,UAAU,eAAf,SACCiE,EAAUS,MAAMF,EAAOA,EAjBhB,GAiBkCG,KAAI,SAACnD,GAAD,OAAU,cAAC,EAAD,CAAcA,KAAMA,GAAWA,EAAKC,gBAE5F,cAAC,EAAD,CAAYoB,UAAWA,EAAWN,SAAU0B,EAAUQ,OAAQjC,QAnBtD,QC3DdvC,G,OAAaC,YAAOC,IAAPD,CAAH,kJAmDDoB,GApCG,SAACjB,GAEf,OACQ,eAACkB,EAAA,EAAD,CAAMvB,UAAU,cAAhB,UACI,sBAAKA,UAAU,aAAf,UACI,gCACI,sBAAMA,UAAU,cAAhB,gCACCK,EAAMmB,KAAK0E,wBAEhB,gCACI,sBAAMlG,UAAU,cAAhB,gCACCK,EAAMmB,KAAKE,aAEhB,gCACI,sBAAM1B,UAAU,cAAhB,kDACCK,EAAMmB,KAAKG,aAEhB,gCACI,sBAAM3B,UAAU,cAAhB,gCACCK,EAAMmB,KAAKI,WAGpB,sBAAK5B,UAAU,iBAAf,UACI,qBAAKA,UAAU,0BAAf,SACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,YAAYnB,UAAU,qBAAxD,wCAEA,qBAAKA,UAAU,0BAAf,SACA,cAAC,EAAD,CAAYW,GAAI,4BAA4BmB,OAAOzB,EAAMmB,KAAKO,IAA9D,SACA,cAACF,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,qBAAtD,uDCnBLgC,GAhCI,SAAC3B,GAOhB,OAAO,8BACH,cAAC,IAAD,CACI4B,MAAO,CAAEC,UAAW,GAAIC,aAAc,KACtCC,UAAWC,KAAKC,KAAKjC,EAAMkC,SAASlC,EAAMmC,SAC1CC,qBAAsB,EACtBC,mBAAoB,GACpBC,aAXiB,SAACnB,GACtB,IAAIoB,EAAcpB,EAAI,SACtBnB,EAAMwC,UAAUD,EAAYvC,EAAMmC,UAU9BM,mBAAmB,aACnBC,cAAc,YACdC,kBAAkB,YAClBC,gBAAgB,SAChBC,cAAc,IACdC,UAAU,IACVC,kBAAkB,YAClBC,cAAc,YACdC,sBAAsB,YACtBC,kBAAkB,YAClBC,kBAAkB,WAClBC,WAAW,MACXC,eAAe,YACfC,mBAAmB,iBCfzBM,I,OAAY,CACd,CACIlC,GAAG,IACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACIpE,GAAG,IACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACIpE,GAAG,IACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACIpE,GAAG,IACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACIpE,GAAG,IACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,KAuCDF,GA3BG,WAEd,MAA2BnF,mBAAS,GAApC,mBAAO0D,EAAP,KAAc3B,EAAd,KAIA,OACI,sBAAK7C,UAAU,OAAf,UAEI,qBAAKA,UAAU,mBAAf,SACA,sBAAMA,UAAU,cAAhB,wCAIA,cAAC,GAAD,CAAY6C,UAAWA,EAAWN,SAAU0B,GAAUQ,OAAQjC,QAXtD,IAYR,sBAAKxC,UAAU,mBAAf,UACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,cAAtD,0BACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,eAAtD,yCAEA,qBAAKA,UAAU,SAAf,SACCiE,GAAUS,MAAMF,EAAOA,EAjBhB,GAiBkCG,KAAI,SAACnD,GAAD,OAAU,cAAC,GAAD,CAAsBA,KAAMA,GAAWA,EAAKC,gBAEpG,cAAC,GAAD,CAAYoB,UAAWA,EAAWN,SAAU0B,GAAUQ,OAAQjC,QAnBtD,QCxDd4D,I,OAAU,CACZ,CACIF,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACID,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACID,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACID,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,GAEZ,CACID,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,KAIVE,GAAa,CACf,CACItE,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,SACL0E,SAAS,oGAEb,CACIvE,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,SACL0E,SAAS,oEAEb,CACIvE,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,SACL0E,SAAS,oEAEb,CACIvE,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,SACL0E,SAAS,oEAEb,CACIvE,GAAG,EACHN,UAAU,SACVC,UAAU,SACVC,UAAU,OACVC,KAAK,SACL0E,SAAS,qEAkEFC,GA7DK,WAChB,IAAMC,EAAQC,cACRC,EAASL,GAAWM,MAAK,SAAAC,GAAO,OAAIA,EAAQ7E,IAAMyE,EAAK,MAE7D,OACI,gCACI,qBAAKxG,UAAU,4BAAf,SACI,sBAAMA,UAAU,uBAAhB,oDAKJ,qBAAKA,UAAU,6BAAf,SACI,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,YAAYnB,UAAU,wBAAxD,4BAEJ,sBAAK6G,MAAM,mBAAX,UACI,sBAAK7G,UAAU,qBAAf,UACI,gCACI,sBAAMA,UAAU,cAAhB,4CACC0G,EAAOjF,aAEZ,gCACI,sBAAMzB,UAAU,cAAhB,gCACC0G,EAAOhF,aAEZ,gCACI,sBAAM1B,UAAU,cAAhB,kDACC0G,EAAO/E,aAEZ,gCACI,sBAAM3B,UAAU,cAAhB,gCACC0G,EAAO9E,WAGhB,sBAAK5B,UAAU,oBAAf,UACI,8BACA,sBAAMA,UAAU,cAAhB,oDAEA,qBAAK6G,MAAM,uBAAX,SAAmCH,EAAOJ,SAASQ,MAAM,QAAQnC,KAAI,SAACoC,GAClE,OAAOA,EAAKC,MAAM,MAAQ,uBAASD,aAK/C,qBAAK/G,UAAU,gCAAf,SACI,sBAAMA,UAAU,2BAAhB,sEAKJ,sBAAKA,UAAU,mBAAf,UACI,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,cAAtD,0BACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,eAAtD,yCAEJ,qBAAKA,UAAU,SAAf,SACSoG,GAAQa,QAAO,SAAAL,GAAO,OAAIA,EAAQT,SAAWK,EAAK,MAAQ7B,KAAI,SAACnD,GAAD,OAAU,cAAC,GAAD,CAAsBA,KAAMA,GAAWA,EAAKC,oBCzInI2E,I,OAAU,CACZ,CACIrE,GAAG,EACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,EACRG,SAAS,oGAEb,CACIvE,GAAG,EACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,EACRG,SAAS,oGAEb,CACIvE,GAAG,EACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,EACRG,SAAS,oGAEb,CACIvE,GAAG,EACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,EACRG,SAAS,oGAEb,CACIvE,GAAG,EACHmE,qBAAqB,MACrBxE,UAAU,SACVC,UAAU,OACVC,KAAK,SACLuE,QAAQ,EACRG,SAAS,sGAIXY,GAAiB,CACnB,CACInF,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,UAET,CACIG,GAAG,EACHiE,KAAK,EACLF,aAAa,YACbpE,UAAU,SACVqE,aAAa,OACbnE,KAAK,WAkEEuF,GA7DgB,WAC3B,IAAMX,EAAQC,cACRC,EAASN,GAAQO,MAAK,SAAAC,GAAO,OAAIA,EAAQ7E,IAAMyE,EAAK,MAE1D,OACI,gCACI,qBAAKxG,UAAU,yBAAf,SACI,sBAAMA,UAAU,oBAAhB,wCAKJ,qBAAKA,UAAU,0BAAf,SACI,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,YAAYnB,UAAU,qBAAxD,4BAEJ,sBAAK6G,MAAM,gBAAX,UACI,sBAAK7G,UAAU,kBAAf,UACI,gCACI,sBAAMA,UAAU,cAAhB,gCACC0G,EAAOR,wBAEZ,gCACI,sBAAMlG,UAAU,cAAhB,gCACC0G,EAAOhF,aAEZ,gCACI,sBAAM1B,UAAU,cAAhB,kDACC0G,EAAO/E,aAEZ,gCACI,sBAAM3B,UAAU,cAAhB,gCACC0G,EAAO9E,WAGhB,sBAAK5B,UAAU,iBAAf,UACI,8BACA,sBAAMA,UAAU,cAAhB,oDAEA,qBAAK6G,MAAM,oBAAX,SAAgCH,EAAOJ,SAASQ,MAAM,QAAQnC,KAAI,SAACoC,GAC/D,OAAOA,EAAKC,MAAM,MAAQ,uBAASD,aAK/C,qBAAK/G,UAAU,6BAAf,SACI,sBAAMA,UAAU,wBAAhB,0DAKJ,sBAAKA,UAAU,yBAAf,UACI,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,cAAtD,0BACA,cAAC6B,EAAA,EAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUnB,UAAU,eAAtD,yCAEJ,qBAAKA,UAAU,eAAf,SACSkH,GAAeD,QAAO,SAAAL,GAAO,OAAIA,EAAQZ,MAAQQ,EAAK,MAAQ7B,KAAI,SAACnD,GAAD,OAAU,cAAC,EAAD,CAAcA,KAAMA,GAAWA,EAAKsE,uB,OC5FnI,SAASsB,KACP,OAAO,8BACC,cAAC,EAAD,MAIV,SAASC,KACP,OAAO,cAAC,EAAD,IAGT,SAASpB,KACP,OAAO,cAAC,EAAD,IAET,SAASqB,KACP,OAAO,cAAC,GAAD,IAGIC,OA1DH,WACR,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACC,gCAEC,cAAC,EAAD,IACA,eAAC,IAAD,WAGE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAACL,GAAD,MAEF,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,SAAlB,SACE,cAACJ,GAAD,MAEF,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAKF,cAAC,IAAD,CAAOC,OAAU,kBAAM,cAAC,GAAD,KACrBD,KAAK,4BAEP,cAAC,IAAD,CAAOC,OAAU,kBAAM,cAAC,GAAD,KACrBD,KAAK,kDC9CJE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdzD,IAASuD,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,MAEF/D,SAASC,eAAe,SAM1BqD,O","file":"static/js/main.7ffdebc9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home  = () => {\r\n\r\n    return <div className=\"topHeading\">HelloCManager制作中です</div>\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { MenuItem, Drawer } from 'material-ui';\r\n\r\n\r\n\r\nimport \"./Navigation.css\";\r\n\r\nconst StyledLink = styled(Link)`\r\ntext-decoration:none;\r\ncolor:#000;\r\nfont-size:16px;\r\nletter-spacing:1.4px;\r\n\"&:hover\":{\r\n  text-decoration:none;\r\n}\r\n`\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        //   <nav className=\"Navigation\">\r\n        //     <ul className=\"NavigationList\">\r\n        //     <StyledLink to=\"/\">\r\n        //         <li className=\"NavigationUnit\">\r\n        //             <span >TOP</span>\r\n        //         </li>\r\n        //       </StyledLink>\r\n        //       <StyledLink to=\"/group\">\r\n        //         <li className=\"NavigationUnit\">\r\n        //             <span >グループ一覧</span>\r\n        //         </li>\r\n        //       </StyledLink>\r\n        //       <StyledLink to=\"/users\">\r\n        //         <li className=\"NavigationUnit\">\r\n        //             <span >ユーザ一覧</span>\r\n        //         </li>\r\n        //       </StyledLink>\r\n        //       <StyledLink to=\"/questions\">\r\n        //         <li className=\"NavigationUnit\">\r\n        //             <span >問題一覧</span>\r\n        //         </li>\r\n        //       </StyledLink>\r\n        //       <StyledLink to=\"/teachingMaterials\">\r\n        //         <li className=\"NavigationUnit\">\r\n        //             <span >教材一覧</span>\r\n        //         </li>\r\n        //       </StyledLink>\r\n        //     </ul>\r\n        // </nav>\r\n        <Drawer    \r\n        docked={false}\r\n        width={200}\r\n        open={props.open}\r\n        onRequestChange={() => props.setOpenNavigation(false)}\r\n        >\r\n            <StyledLink to=\"/\" onClick={() => props.setOpenNavigation(false)}>\r\n              <MenuItem>\r\n                TOP\r\n              </MenuItem>\r\n            </StyledLink>\r\n\r\n            <StyledLink to=\"/group\" onClick={() => props.setOpenNavigation(false)}>\r\n              <MenuItem>\r\n              グループ一覧\r\n              </MenuItem>\r\n            </StyledLink>\r\n\r\n            <StyledLink to=\"/users\" onClick={() => props.setOpenNavigation(false)}>\r\n              <MenuItem>\r\n              ユーザー覧\r\n              </MenuItem>\r\n            </StyledLink>\r\n\r\n            <StyledLink to=\"/questions\" onClick={() => props.setOpenNavigation(false)}>\r\n              <MenuItem>\r\n              問題一覧\r\n              </MenuItem>\r\n            </StyledLink>\r\n\r\n            <StyledLink to=\"/teachingMaterials\" onClick={() => props.setOpenNavigation(false)}>\r\n              <MenuItem>\r\n              教材一覧\r\n              </MenuItem>\r\n            </StyledLink>\r\n\r\n        </Drawer>\r\n\r\n    )\r\n}\r\n\r\nexport default Navigation;","import {useState} from \"react\";\r\n\r\nimport \"./Header.css\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {IconButton} from \"material-ui\";\r\nimport Navigation from \"./Navigation\";\r\nconst Header = () => {\r\n    const [openNavigation,setOpenNavigation] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Navigation open={openNavigation} setOpenNavigation={setOpenNavigation}></Navigation>\r\n        <AppBar position=\"static\" className=\"Header\" onLeftIconButtonTouchTap={() => setOpenNavigation(true)}>\r\n        <IconButton \r\n                color=\"inherit\"\r\n                aria-label=\"Menu\"\r\n                onClick={() => setOpenNavigation(true)}>\r\n\t\t        <MenuIcon className=\"MenuIcon\"></MenuIcon>\r\n            </IconButton>\r\n            <Typography className=\"Title\" variant=\"h3\" color=\"inherit\">\r\n                    HelloC Manager\r\n                </Typography>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import \"./GroupInfo.css\";\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledLink = styled(Link)`\r\ntext-decoration:none;\r\ncolor:#000;\r\nfont-size:16px;\r\nletter-spacing:1.4px;\r\n\"&:hover\":{\r\n  text-decoration:none;\r\n}\r\n`\r\n\r\n\r\nconst GroupInfo = (props) => {\r\n\r\n    return (\r\n            <Card className=\"GroupInfoFrame\">\r\n                <div className=\"GroupInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">グループ名</span>\r\n                        {props.data.groupName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {props.data.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"GroupInfoLinkGrid\">\r\n                    <div className=\"GroupInfoDeleteButtonFrame\">\r\n                    <Button variant=\"contained\" color=\"secondary\" className=\"GroupInfoDeleteButton\">削除する</Button>\r\n                    </div>\r\n                    <div className=\"GroupInfoDetailButtonFrame\">\r\n                    <StyledLink to={\"/group/detail/\".concat(props.data.id)}>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"GroupInfoDetailButton\">詳細を見る</Button>\r\n                    </StyledLink>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n    )\r\n}\r\n\r\nexport default GroupInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import \"./CreateGroupModal.css\";\r\n\r\nconst CreateGroupModal = (props) => {\r\n    const overlayClass = props.modalVisible ? \"Modal-Overlay\" : \"Modal-Overlay hiddenOverlay\";\r\n    const FormClass = props.modalVisible ? \"CreateGroupForm\" : \"CreateGroupForm hiddenForm\";\r\n    return <div>\r\n        <div className={overlayClass} onClick={() => {props.setModalVisible(false)}}>\r\n            &nbsp;\r\n        </div>\r\n        <form>\r\n            <div className={FormClass}>\r\n                Form建設予定地\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default CreateGroupModal;","import React,{useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nimport GroupInfo from \"./GroupInfo\";\r\nimport Pagination from \"./Pagination\";\r\nimport CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./Body.css\"\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        id:1,\r\n        groupName:\"group1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\"\r\n    },\r\n    {\r\n        id:2,\r\n        groupName:\"group2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\"\r\n    },\r\n    {\r\n        id:3,\r\n        groupName:\"group3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\"\r\n    },\r\n    {\r\n        id:4,\r\n        groupName:\"group4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\"\r\n    },\r\n    {\r\n        id:5,\r\n        groupName:\"group5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\"\r\n    },\r\n];\r\n\r\nconst CreateGroup = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n        document.getElementById(\"modal-creategroup\")\r\n    );\r\n}\r\n\r\n\r\nconst Body = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup>\r\n            <div className=\"PageTitleFrame\">\r\n            <span className=\"PageTitle\">\r\n                グループ一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addGroupButtonFrame\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"addGroupButton\" onClick={ () => {setModalVisible(true)}}>グループ追加</Button>\r\n            </div>\r\n            <div className=\"GroupList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <GroupInfo data={data} key={data.id}></GroupInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import \"./UserInfo.css\";\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    return (\r\n        <TableRow\r\n        key={props.data.UserName}\r\n        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n        >\r\n        <TableCell component=\"th\" scope=\"row\">\r\n            {props.data.UserName}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{props.data.Email}</TableCell>\r\n        <TableCell align=\"center\">{props.data.Authority}</TableCell>\r\n        <TableCell align=\"center\">変更</TableCell>\r\n        <TableCell align=\"center\">削除</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React,{useState} from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\n\r\nimport UserPagination from \"./Pagination\";\r\nimport UserInfo from \"./UserInfo\";\r\n\r\nimport \"./Body.css\";\r\n\r\nconst UserDummyData = [\r\n    {\r\n        UserName:\"test1\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"testtest2\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"test3\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"test4test\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"Professor\",\r\n    },\r\n    {\r\n        UserName:\"test5\",\r\n        Email:\"test@testtestest.com\",\r\n        Authority:\"student\",\r\n    },\r\n    {\r\n        UserName:\"test6\",\r\n        Email:\"test@test.com\",\r\n        Authority:\"Admin\",\r\n    },\r\n];\r\n\r\n\r\nconst Body = () => {\r\n\r\n    // const CreateGroup = (props) => {\r\n    //     return ReactDOM.createPortal(\r\n    //         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n    //         document.getElementById(\"modal-creategroup\")\r\n    //     );\r\n    // }\r\n    \r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 5; // 1ページあたりに表示したいアイテムの数\r\n   // const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return <div className=\"UsersBody\">\r\n                {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n\r\n                <div className=\"UsersPageTitleFrame\">\r\n                    <span className=\"UsersPageTitle\">\r\n                        ユーザー一覧\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"UserCreateButtons\">\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"CreateUserButton\">\r\n                        新しく\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"CreateUsersButton\">\r\n                        複数\r\n                    </Button>\r\n                </div>\r\n\r\n                <UserPagination setOffset={setOffset} dataleng={UserDummyData.length} perPage={perPage}></UserPagination>\r\n\r\n                <TableContainer className=\"UserTable\" component={Paper} >\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>名前</TableCell>\r\n                        <TableCell align=\"center\">メールアドレス</TableCell>\r\n                        <TableCell align=\"center\">権限</TableCell>\r\n                        <TableCell align=\"center\">変更</TableCell>\r\n                        <TableCell align=\"center\">削除</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {UserDummyData.slice(offset,offset + perPage).map((data) => <UserInfo data={data} key={data.UserName}></UserInfo>)}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Body;","import \"./QuestionInfo.css\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst QuestionInfo = (props) => {\r\n\r\n    return (\r\n            <Card className=\"QuestionInfoFrame\">\r\n                <div className=\"QuestionInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">問題名</span>\r\n                        {props.data.questionName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">問題形式</span>\r\n                        {props.data.questionType}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"QuestionInfoLinkGrid\">\r\n                    <div className=\"QuestionInfoDeleteButtonFrame\">\r\n                    <Button variant=\"contained\" color=\"secondary\" className=\"QuestionInfoDeleteButton\">削除する</Button>\r\n                    </div>\r\n                    <div className=\"QuestionInfoDetailButtonFrame\">\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"QuestionInfoDetailButton\">詳細を見る</Button>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n    )\r\n}\r\n\r\nexport default QuestionInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React,{useState} from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nimport QuestionInfo from \"./QuestionInfo\";\r\nimport Pagination from \"./Pagination\";\r\n//import CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./Questions.css\";\r\n\r\n\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        id:1,\r\n        TMId:1,\r\n        questionName:\"question1\",\r\n        createdBy:\"admin1\",\r\n        questionType:\"test\",\r\n        date:\"dummy1\"\r\n    },\r\n    {\r\n        id:2,\r\n        TMId:2,\r\n        questionName:\"question2\",\r\n        createdBy:\"admin2\",\r\n        questionType:\"test\",\r\n        date:\"dummy2\"\r\n    },\r\n    {\r\n        id:3,\r\n        TMId:3,\r\n        questionName:\"question3\",\r\n        createdBy:\"admin3\",\r\n        questionType:\"test\",\r\n        date:\"dummy3\"\r\n    },\r\n    {\r\n        id:4,\r\n        TMId:4,\r\n        questionName:\"question4\",\r\n        createdBy:\"admin4\",\r\n        questionType:\"test\",\r\n        date:\"dummy4\"\r\n    },\r\n    {\r\n        id:5,\r\n        TMId:5,\r\n        questionName:\"question5\",\r\n        createdBy:\"admin5\",\r\n        questionType:\"test\",\r\n        date:\"dummy5\"\r\n    },\r\n];\r\n\r\n// const CreateGroup = (props) => {\r\n//     return ReactDOM.createPortal(\r\n//         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n//         document.getElementById(\"modal-creategroup\")\r\n//     );\r\n// }\r\n\r\n\r\nconst Questions = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    //const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n            <div className=\"QuestionPageTitleFrame\">\r\n            <span className=\"QuestionPageTitle\">\r\n                問題一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addQuestionButtonFrame\">\r\n            <Button color=\"primary\" variant=\"contained\" className=\"addQuestionButton\" >追加</Button>\r\n            <Button color=\"primary\" variant=\"contained\" className=\"addQuestionsButton\" >複数追加</Button>\r\n            </div>\r\n            <div className=\"QuestionList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <QuestionInfo data={data} key={data.groupName}></QuestionInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questions;","import \"./TeachingMaterialInfo.css\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nconst StyledLink = styled(Link)`\r\ntext-decoration:none;\r\ncolor:#000;\r\nfont-size:16px;\r\nletter-spacing:1.4px;\r\n\"&:hover\":{\r\n  text-decoration:none;\r\n}\r\n`\r\n\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/* TM = TeachingMaterial */\r\n\r\nconst GroupInfo = (props) => {\r\n\r\n    return (\r\n            <Card className=\"TMInfoFrame\">\r\n                <div className=\"TMInfoGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">教材名</span>\r\n                        {props.data.TeachingMaterialName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {props.data.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {props.data.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {props.data.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"TMInfoLinkGrid\">\r\n                    <div className=\"TMInfoDeleteButtonFrame\">\r\n                    <Button variant=\"contained\" color=\"secondary\" className=\"TMInfoDeleteButton\">削除する</Button>\r\n                    </div>\r\n                    <div className=\"TMInfoDetailButtonFrame\">\r\n                    <StyledLink to={\"/TeachingMaterial/detail/\".concat(props.data.id)}>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"TMInfoDetailButton\">詳細を見る</Button>\r\n                    </StyledLink>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n    )\r\n}\r\n\r\nexport default GroupInfo;","import ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const handlePageChange = (data) => {\r\n        let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる\r\n        props.setOffset(page_number*props.perPage); // offsetを変更し、表示開始するアイテムの番号を変更\r\n    }\r\n\r\n    return <div>\r\n        <ReactPaginate\r\n            style={{ marginTop: 10, marginBottom: 100 }}\r\n            pageCount={Math.ceil(props.dataleng/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\r\n            marginPagesDisplayed={5}\r\n            pageRangeDisplayed={10}\r\n            onPageChange={handlePageChange}\r\n            containerClassName='pagination'\r\n            pageClassName='page-item'\r\n            pageLinkClassName='page-link'\r\n            activeClassName='active'\r\n            previousLabel='<'\r\n            nextLabel='>'\r\n            previousClassName='page-item'\r\n            nextClassName='page-item'\r\n            previousLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            disabledClassName='disabled'\r\n            breakLabel='...'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React,{useState} from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TeachingMaterialInfo from \"./TeachingMaterialInfo\";\r\nimport Pagination from \"./Pagination\";\r\n//import CreateGroupModal from \"./CreateGroupModal\";\r\n\r\nimport \"./TeachingMaterials.css\";\r\n\r\n\r\n\r\n\r\nconst dummyData = [\r\n    {\r\n        id:\"1\",\r\n        TeachingMaterialName:\"TM1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        groupId:1\r\n    },\r\n    {\r\n        id:\"2\",\r\n        TeachingMaterialName:\"TM2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        groupId:2\r\n    },\r\n    {\r\n        id:\"3\",\r\n        TeachingMaterialName:\"TM3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        groupId:3\r\n    },\r\n    {\r\n        id:\"4\",\r\n        TeachingMaterialName:\"TM4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        groupId:4\r\n    },\r\n    {\r\n        id:\"5\",\r\n        TeachingMaterialName:\"TM5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        groupId:5\r\n    },\r\n];\r\n\r\n// const CreateGroup = (props) => {\r\n//     return ReactDOM.createPortal(\r\n//         <CreateGroupModal modalVisible={props.modalVisible} setModalVisible={props.setModalVisible}></CreateGroupModal>,\r\n//         document.getElementById(\"modal-creategroup\")\r\n//     );\r\n// }\r\n\r\n\r\nconst Questions = () => {\r\n\r\n    const [offset,setOffset] = useState(0);\r\n    const perPage = 2; // 1ページあたりに表示したいアイテムの数\r\n    //const [modalVisible,setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Body\">\r\n            {/* <CreateGroup modalVisible={modalVisible} setModalVisible={setModalVisible}></CreateGroup> */}\r\n            <div className=\"TMPageTitleFrame\">\r\n            <span className=\"TMPageTitle\">\r\n                教材一覧\r\n            </span>\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n            <div className=\"addTMButtonFrame\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"addTMButton\" >追加</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"addTMsButton\" >複数追加</Button>\r\n            </div>\r\n            <div className=\"TMList\">\r\n            {dummyData.slice(offset,offset + perPage).map((data) => <TeachingMaterialInfo data={data} key={data.groupName}></TeachingMaterialInfo>)}\r\n            </div>\r\n            <Pagination setOffset={setOffset} dataleng={dummyData.length} perPage={perPage}></Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questions;","import React from \"react\";\r\n\r\nimport { useParams } from \"react-router\";\r\n\r\nimport TeachingMaterialInfo from \"../TeachingMaterials/TeachingMaterialInfo\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./GroupDetail.css\";\r\n\r\n\r\n//とりあえずダミーデータにしてます（本来はAPIから取得）\r\nconst dummyTM = [\r\n    {\r\n        TeachingMaterialName:\"TM1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        groupId:1\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        groupId:2\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        groupId:3\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        groupId:4\r\n    },\r\n    {\r\n        TeachingMaterialName:\"TM5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        groupId:5\r\n    },\r\n];\r\n\r\nconst dummyGroup = [\r\n    {\r\n        id:1,\r\n        groupName:\"group1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n    {\r\n        id:2,\r\n        groupName:\"group2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n    {\r\n        id:3,\r\n        groupName:\"group3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n    {\r\n        id:4,\r\n        groupName:\"group4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n    {\r\n        id:5,\r\n        groupName:\"group5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        overview:\"これはtestグループです。\"\r\n    },\r\n];\r\n\r\n\r\nconst GroupDetail = () => {\r\n    const param = useParams();\r\n    const detail = dummyGroup.find(element => element.id == param[\"id\"]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"GroupDetailPageTitleFrame\">\r\n                <span className=\"GroupDetailPageTitle\">\r\n                    グループ詳細\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"editGroupDetailButtonFrame\">\r\n                <Button variant=\"contained\" color=\"secondary\" className=\"editGroupDetailButton\">編集</Button>\r\n            </div>\r\n            <div class=\"GroupDetailFrame\">\r\n                <div className=\"GroupDetailTopGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">グループ名</span>\r\n                        {detail.groupName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {detail.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {detail.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {detail.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"GroupDetailBottom\">\r\n                    <div>\r\n                    <span className=\"elementName\">グループ概略</span>\r\n                    </div>\r\n                    <div class=\"GroupDetailTextRange\">{detail.overview.split(/(\\n)/).map((item) => {\r\n                        return item.match(/\\n/) ? <br /> : item\r\n                    })}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"GroupDetailPageTitleFrame-sub\">\r\n                <span className=\"GroupDetailPageTitle-sub\">\r\n                    グループ内教材一覧\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"addTMButtonFrame\">\r\n                <Button variant=\"contained\" color=\"primary\" className=\"addTMButton\" >追加</Button>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"addTMsButton\" >複数追加</Button>\r\n            </div>\r\n            <div className=\"TMList\">\r\n                    {dummyTM.filter(element => element.groupId == param[\"id\"]).map((data) => <TeachingMaterialInfo data={data} key={data.groupName}></TeachingMaterialInfo>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupDetail;","import React from \"react\";\r\n\r\nimport { useParams } from \"react-router\";\r\n\r\nimport QuestionInfo from \"../Questions/QuestionInfo\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./TeachingMaterialDetail.css\";\r\n\r\n\r\n//とりあえずダミーデータにしてます（本来はAPIから取得）\r\nconst dummyTM = [\r\n    {\r\n        id:1,\r\n        TeachingMaterialName:\"TM1\",\r\n        createdBy:\"admin1\",\r\n        accesskey:\"test\",\r\n        date:\"dummy1\",\r\n        groupId:1,\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n    {\r\n        id:2,\r\n        TeachingMaterialName:\"TM2\",\r\n        createdBy:\"admin2\",\r\n        accesskey:\"test\",\r\n        date:\"dummy2\",\r\n        groupId:2,\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n    {\r\n        id:3,\r\n        TeachingMaterialName:\"TM3\",\r\n        createdBy:\"admin3\",\r\n        accesskey:\"test\",\r\n        date:\"dummy3\",\r\n        groupId:3,\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n    {\r\n        id:4,\r\n        TeachingMaterialName:\"TM4\",\r\n        createdBy:\"admin4\",\r\n        accesskey:\"test\",\r\n        date:\"dummy4\",\r\n        groupId:4,\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n    {\r\n        id:5,\r\n        TeachingMaterialName:\"TM5\",\r\n        createdBy:\"admin5\",\r\n        accesskey:\"test\",\r\n        date:\"dummy5\",\r\n        groupId:5,\r\n        overview:\"これはtestグループです。\\n改行テスト\"\r\n    },\r\n];\r\n\r\nconst dummyQuestions = [\r\n    {\r\n        id:1,\r\n        TMId:1,\r\n        questionName:\"question1\",\r\n        createdBy:\"admin1\",\r\n        questionType:\"test\",\r\n        date:\"dummy1\"\r\n    },\r\n    {\r\n        id:2,\r\n        TMId:2,\r\n        questionName:\"question2\",\r\n        createdBy:\"admin2\",\r\n        questionType:\"test\",\r\n        date:\"dummy2\"\r\n    },\r\n    {\r\n        id:3,\r\n        TMId:3,\r\n        questionName:\"question3\",\r\n        createdBy:\"admin3\",\r\n        questionType:\"test\",\r\n        date:\"dummy3\"\r\n    },\r\n    {\r\n        id:4,\r\n        TMId:4,\r\n        questionName:\"question4\",\r\n        createdBy:\"admin4\",\r\n        questionType:\"test\",\r\n        date:\"dummy4\"\r\n    },\r\n    {\r\n        id:5,\r\n        TMId:5,\r\n        questionName:\"question5\",\r\n        createdBy:\"admin5\",\r\n        questionType:\"test\",\r\n        date:\"dummy5\"\r\n    },\r\n];\r\n\r\n\r\nconst TeachingMaterialDetail = () => {\r\n    const param = useParams();\r\n    const detail = dummyTM.find(element => element.id == param[\"id\"]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"TMDetailPageTitleFrame\">\r\n                <span className=\"TMDetailPageTitle\">\r\n                    教材詳細\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"editTMDetailButtonFrame\">\r\n                <Button variant=\"contained\" color=\"secondary\" className=\"editTMDetailButton\">編集</Button>\r\n            </div>\r\n            <div class=\"TMDetailFrame\">\r\n                <div className=\"TMDetailTopGrid\">\r\n                    <div>\r\n                        <span className=\"elementName\">教材名</span>\r\n                        {detail.TeachingMaterialName}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成者</span>\r\n                        {detail.createdBy}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">アクセスキー</span>\r\n                        {detail.accesskey}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"elementName\">作成日</span>\r\n                        {detail.date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"TMDetailBottom\">\r\n                    <div>\r\n                    <span className=\"elementName\">教材詳細情報</span>\r\n                    </div>\r\n                    <div class=\"TMDetailTextRange\">{detail.overview.split(/(\\n)/).map((item) => {\r\n                        return item.match(/\\n/) ? <br /> : item\r\n                    })}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"TMDetailPageTitleFrame-sub\">\r\n                <span className=\"TMDetailPageTitle-sub\">\r\n                    教材内問題一覧\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"addQuestionButtonFrame\">\r\n                <Button variant=\"contained\" color=\"primary\" className=\"addTMButton\" >追加</Button>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"addTMsButton\" >複数追加</Button>\r\n            </div>\r\n            <div className=\"QuestionList\">\r\n                    {dummyQuestions.filter(element => element.TMId == param[\"id\"]).map((data) => <QuestionInfo data={data} key={data.questionName}></QuestionInfo>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeachingMaterialDetail;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n\r\n\r\n\r\n//一覧ページ等\r\nimport Home from \"./components/Home/Home\";\r\nimport Header from \"./components/Header\";\r\nimport GroupBody from \"./components/Group/Body\";\r\nimport UsersBody from \"./components/Users/Body\";\r\nimport QuestionsBody from \"./components/Questions/Questions\";\r\nimport TeachingMaterialsBody from \"./components/TeachingMaterials/TeachingMaterials\";\r\n\r\n//詳細ページ\r\nimport GroupDetail from \"./components/GroupDetail/GroupDetail\";\r\nimport TeachingMaterialDetail from \"./components/TMDetail/TeachingMaterialDetail\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n      <Router>\r\n        <MuiThemeProvider>\r\n         <div>\r\n\r\n          <Header></Header>\r\n          <Switch>\r\n\r\n            {/* 一覧ページのルーティング */}\r\n            <Route exact path=\"/group\">\r\n              <Group></Group>\r\n            </Route>\r\n            <Route exact path=\"/users\">\r\n              <Users />\r\n            </Route>\r\n            <Route exact path=\"/questions\">\r\n              <Questions />\r\n            </Route>\r\n            <Route exact path=\"/teachingMaterials\">\r\n              <TeachingMaterials />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n\r\n            {/* 詳細ページのルーティング */}\r\n\r\n            <Route render = {() => <GroupDetail/>\r\n            } path=\"/group/detail/:id(\\d+)\"/>\r\n\r\n            <Route render = {() => <TeachingMaterialDetail/>\r\n            } path=\"/TeachingMaterial/detail/:id(\\d+)\"/>\r\n\r\n          </Switch>\r\n        </div>\r\n        </MuiThemeProvider>\r\n      </Router>\r\n    );\r\n}\r\n\r\n  function Group() {\r\n    return <div>\r\n            <GroupBody></GroupBody>\r\n    </div>;\r\n  }\r\n  \r\n  function Users() {\r\n    return <UsersBody></UsersBody>;\r\n  }\r\n\r\n  function Questions() {\r\n    return <QuestionsBody></QuestionsBody>\r\n  }\r\n  function TeachingMaterials(){\r\n    return <TeachingMaterialsBody></TeachingMaterialsBody>\r\n  }\r\n\r\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}